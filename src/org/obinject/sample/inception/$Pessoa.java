package org.obinject.sample.inception; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; public class $Pessoa extends Pessoa implements Entity<$Pessoa> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Pessoa.classId == null) {$Pessoa.classId = Uuid.fromString("09F563C4-6C98-B533-1F0E-9980AB4E54AF"); }return $Pessoa.classId; } public static final BTreeEntity<$Pessoa> entityStructure = new BTreeEntity<$Pessoa>(new File("build/classes/org/obinject/sample/inception/inception.dbo", 4096)){}; public static final BTree<UniqueOnePessoa> uniqueOnePessoaStructure = new BTree<UniqueOnePessoa>(new File("build/classes/org/obinject/sample/inception/inception.dbo", 4096)){}; public static final Attribute<Integer> codigo = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Pessoa)entity).getCodigo(); } }; public static final Attribute<java.lang.String> nome = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Pessoa)entity).getNome(); } }; public static final Attribute<org.obinject.sample.inception.Totem> totem = new Attribute<org.obinject.sample.inception.Totem> (){ @Override public org.obinject.sample.inception.Totem valueOfAttribute(Entity entity) { return ((Pessoa)entity).getTotem(); } }; public $Pessoa(){ this.uuid = Uuid.generator(); } public $Pessoa(Pessoa obj){ this.setCodigo(obj.getCodigo()); this.setNome(obj.getNome()); this.setTotem(obj.getTotem()); this.uuid = Uuid.generator(); } public $Pessoa(Pessoa obj, Uuid uuid){ this.setCodigo(obj.getCodigo()); this.setNome(obj.getNome()); this.setTotem(obj.getTotem()); this.uuid = uuid; } public $Pessoa($Pessoa obj){ this.setCodigo(obj.getCodigo()); this.setNome(obj.getNome()); this.setTotem(obj.getTotem()); this.uuid = obj.getUuid();; } public $Pessoa(Uuid uuid){ this.uuid = uuid; } protected Uuid uuidTotem; @Override public Totem getTotem(){ Totem superTotem = super.getTotem(); if (superTotem == null && uuidTotem != null) {superTotem = $Totem.entityStructure.find(uuidTotem); this.setTotem(superTotem); }return superTotem; }private void resetUuidTotem() { if (this.getTotem() != null) { if (this.getTotem() instanceof Entity) { uuidTotem = ((Entity) this.getTotem()).getUuid(); } else { $Totem entity = new $Totem (this.getTotem()); uuidTotem = $Totem.find(entity); if (uuidTotem == null) { throw new TransientObjectException("Pessoa", "totem", "Totem"); } } } }@Override public boolean isEqual($Pessoa obj) { return (this.getCodigo() == obj.getCodigo()) && (((this.getNome() == null) && (obj.getNome() == null)) || ((this.getNome() != null) && (obj.getNome() != null) && (this.getNome().equals( obj.getNome())))); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Pessoa> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Pessoa.find(this); if(uuidInject == null){ resetUuidTotem(); $Pessoa.entityStructure.add(this); UniqueOnePessoa.uniqueOnePessoaStructure.add(new UniqueOnePessoa(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Pessoa.find(this); if(uuidReject != null){ UniqueOnePessoa.uniqueOnePessoaStructure.remove(new UniqueOnePessoa(this, this.getUuid())); $Pessoa.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Pessoa.find(this); $Pessoa entityOld = $Pessoa.entityStructure.find(uuidOld); if(entityOld != null){ resetUuidTotem(); UniqueOnePessoa uniqueOnePessoaOld = new UniqueOnePessoa(entityOld, entityOld.getUuid()); UniqueOnePessoa uniqueOnePessoaNew = new UniqueOnePessoa(this, entityOld.getUuid()); if(uniqueOnePessoaOld.hasSameKey(uniqueOnePessoaNew)){ $Pessoa.uniqueOnePessoaStructure.remove(uniqueOnePessoaOld); $Pessoa.uniqueOnePessoaStructure.add(uniqueOnePessoaNew); } this.uuid = uuidOld; $Pessoa.entityStructure.remove(entityOld); $Pessoa.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Pessoa entity) { UniqueOnePessoa unique = new UniqueOnePessoa (entity, entity.getUuid()); return $Pessoa.uniqueOnePessoaStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Pessoa.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setCodigo(pull.pullInteger()); this.setNome(pull.pullString()); int totalTotem = pull.pullInteger(); if(totalTotem > 0){this.uuidTotem = pull.pullUuid(); }return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Pessoa.classId); push.pushUuid(uuid); push.pushInteger(this.getCodigo()); push.pushString(this.getNome()); if (this.uuidTotem != null) { push.pushInteger(1); push.pushUuid(this.uuidTotem); } else {push.pushInteger(0); } } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfInteger + Page.sizeOfString(this.getNome()) + Page.sizeOfEntity(this.uuidTotem); } static{ codigo.getSchemas().add( new Schema<$Pessoa, UniqueOnePessoa, Integer>() { @Override public $Pessoa newEntity(Integer value) { $Pessoa obj = new $Pessoa(); obj.setCodigo(value); return obj; } @Override public UniqueOnePessoa newKey(Integer value) { UniqueOnePessoa obj = new UniqueOnePessoa(); obj.setCodigo(value); return obj; } @Override public EntityStructure<$Pessoa> getEntityStructure() { return $Pessoa.entityStructure; } @Override public KeyStructure<UniqueOnePessoa> getKeyStructure() { return UniqueOnePessoa.uniqueOnePessoaStructure; } } ); } } 