package org.obinject.sample.inception; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; public class $Sonho extends Sonho implements Entity<$Sonho> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Sonho.classId == null) {$Sonho.classId = Uuid.fromString("90F329B8-2F4C-BEFE-FA7C-F49BAD6D9760"); }return $Sonho.classId; } public static final BTreeEntity<$Sonho> entityStructure = new BTreeEntity<$Sonho>(new File("build/classes/org/obinject/sample/inception/inception.dbo", 4096)){}; public static final BTree<UniqueOneSonho> uniqueOneSonhoStructure = new BTree<UniqueOneSonho>(new File("build/classes/org/obinject/sample/inception/inception.dbo", 4096)){}; public static final Attribute<Integer> codigo = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Sonho)entity).getCodigo(); } }; public static final Attribute<java.util.Calendar> inicio = new Attribute<java.util.Calendar> (){ @Override public java.util.Calendar valueOfAttribute(Entity entity) { return ((Sonho)entity).getInicio(); } }; public static final Attribute<java.util.Calendar> termino = new Attribute<java.util.Calendar> (){ @Override public java.util.Calendar valueOfAttribute(Entity entity) { return ((Sonho)entity).getTermino(); } }; public static final Attribute<java.util.Calendar> avisoDisparo = new Attribute<java.util.Calendar> (){ @Override public java.util.Calendar valueOfAttribute(Entity entity) { return ((Sonho)entity).getAvisoDisparo(); } }; public static final Attribute<Integer> nivel = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Sonho)entity).getNivel(); } }; public static final Attribute<Boolean> limbo = new Attribute<Boolean> (){ @Override public Boolean valueOfAttribute(Entity entity) { return ((Sonho)entity).isLimbo(); } }; public static final Attribute<org.obinject.sample.inception.Sonho> sonhoAnterior = new Attribute<org.obinject.sample.inception.Sonho> (){ @Override public org.obinject.sample.inception.Sonho valueOfAttribute(Entity entity) { return ((Sonho)entity).getSonhoAnterior(); } }; public static final Attribute<org.obinject.sample.inception.Sonho> sonhoProximo = new Attribute<org.obinject.sample.inception.Sonho> (){ @Override public org.obinject.sample.inception.Sonho valueOfAttribute(Entity entity) { return ((Sonho)entity).getSonhoProximo(); } }; public static final Attribute<org.obinject.sample.inception.Pasiv> pasiv = new Attribute<org.obinject.sample.inception.Pasiv> (){ @Override public org.obinject.sample.inception.Pasiv valueOfAttribute(Entity entity) { return ((Sonho)entity).getPasiv(); } }; public static final Attribute<org.obinject.sample.inception.Sonhador> sonhadorConstroi = new Attribute<org.obinject.sample.inception.Sonhador> (){ @Override public org.obinject.sample.inception.Sonhador valueOfAttribute(Entity entity) { return ((Sonho)entity).getSonhadorConstroi(); } }; public static final Attribute<java.util.List> sonhadores = new Attribute<java.util.List> (){ @Override public java.util.List valueOfAttribute(Entity entity) { return ((Sonho)entity).getSonhadores(); } }; public static final Attribute<java.util.List> sombras = new Attribute<java.util.List> (){ @Override public java.util.List valueOfAttribute(Entity entity) { return ((Sonho)entity).getSombras(); } }; public $Sonho(){ this.uuid = Uuid.generator(); } public $Sonho(Sonho obj){ this.setCodigo(obj.getCodigo()); this.setInicio(obj.getInicio()); this.setTermino(obj.getTermino()); this.setAvisoDisparo(obj.getAvisoDisparo()); this.setNivel(obj.getNivel()); this.setLimbo(obj.isLimbo()); this.setSonhoAnterior(obj.getSonhoAnterior()); this.setSonhoProximo(obj.getSonhoProximo()); this.setPasiv(obj.getPasiv()); this.setSonhadorConstroi(obj.getSonhadorConstroi()); this.setSonhadores(obj.getSonhadores()); this.setSombras(obj.getSombras()); this.uuid = Uuid.generator(); } public $Sonho(Sonho obj, Uuid uuid){ this.setCodigo(obj.getCodigo()); this.setInicio(obj.getInicio()); this.setTermino(obj.getTermino()); this.setAvisoDisparo(obj.getAvisoDisparo()); this.setNivel(obj.getNivel()); this.setLimbo(obj.isLimbo()); this.setSonhoAnterior(obj.getSonhoAnterior()); this.setSonhoProximo(obj.getSonhoProximo()); this.setPasiv(obj.getPasiv()); this.setSonhadorConstroi(obj.getSonhadorConstroi()); this.setSonhadores(obj.getSonhadores()); this.setSombras(obj.getSombras()); this.uuid = uuid; } public $Sonho($Sonho obj){ this.setCodigo(obj.getCodigo()); this.setInicio(obj.getInicio()); this.setTermino(obj.getTermino()); this.setAvisoDisparo(obj.getAvisoDisparo()); this.setNivel(obj.getNivel()); this.setLimbo(obj.isLimbo()); this.setSonhoAnterior(obj.getSonhoAnterior()); this.setSonhoProximo(obj.getSonhoProximo()); this.setPasiv(obj.getPasiv()); this.setSonhadorConstroi(obj.getSonhadorConstroi()); this.setSonhadores(obj.getSonhadores()); this.setSombras(obj.getSombras()); this.uuid = obj.getUuid();; } public $Sonho(Uuid uuid){ this.uuid = uuid; } protected Uuid uuidSonhoAnterior; @Override public Sonho getSonhoAnterior(){ Sonho superSonhoAnterior = super.getSonhoAnterior(); if (superSonhoAnterior == null && uuidSonhoAnterior != null) {superSonhoAnterior = $Sonho.entityStructure.find(uuidSonhoAnterior); this.setSonhoAnterior(superSonhoAnterior); }return superSonhoAnterior; }private void resetUuidSonhoAnterior() { if (this.getSonhoAnterior() != null) { if (this.getSonhoAnterior() instanceof Entity) { uuidSonhoAnterior = ((Entity) this.getSonhoAnterior()).getUuid(); } else { $Sonho entity = new $Sonho (this.getSonhoAnterior()); uuidSonhoAnterior = $Sonho.find(entity); if (uuidSonhoAnterior == null) { throw new TransientObjectException("Sonho", "sonhoAnterior", "Sonho"); } } } }protected Uuid uuidSonhoProximo; @Override public Sonho getSonhoProximo(){ Sonho superSonhoProximo = super.getSonhoProximo(); if (superSonhoProximo == null && uuidSonhoProximo != null) {superSonhoProximo = $Sonho.entityStructure.find(uuidSonhoProximo); this.setSonhoProximo(superSonhoProximo); }return superSonhoProximo; }private void resetUuidSonhoProximo() { if (this.getSonhoProximo() != null) { if (this.getSonhoProximo() instanceof Entity) { uuidSonhoProximo = ((Entity) this.getSonhoProximo()).getUuid(); } else { $Sonho entity = new $Sonho (this.getSonhoProximo()); uuidSonhoProximo = $Sonho.find(entity); if (uuidSonhoProximo == null) { throw new TransientObjectException("Sonho", "sonhoProximo", "Sonho"); } } } }protected Uuid uuidPasiv; @Override public Pasiv getPasiv(){ Pasiv superPasiv = super.getPasiv(); if (superPasiv == null && uuidPasiv != null) {superPasiv = $Pasiv.entityStructure.find(uuidPasiv); this.setPasiv(superPasiv); }return superPasiv; }private void resetUuidPasiv() { if (this.getPasiv() != null) { if (this.getPasiv() instanceof Entity) { uuidPasiv = ((Entity) this.getPasiv()).getUuid(); } else { $Pasiv entity = new $Pasiv (this.getPasiv()); uuidPasiv = $Pasiv.find(entity); if (uuidPasiv == null) { throw new TransientObjectException("Sonho", "pasiv", "Pasiv"); } } } }protected Uuid uuidSonhadorConstroi; @Override public Sonhador getSonhadorConstroi(){ Sonhador superSonhadorConstroi = super.getSonhadorConstroi(); if (superSonhadorConstroi == null && uuidSonhadorConstroi != null) {superSonhadorConstroi = $Sonhador.entityStructure.find(uuidSonhadorConstroi); this.setSonhadorConstroi(superSonhadorConstroi); }return superSonhadorConstroi; }private void resetUuidSonhadorConstroi() { if (this.getSonhadorConstroi() != null) { if (this.getSonhadorConstroi() instanceof Entity) { uuidSonhadorConstroi = ((Entity) this.getSonhadorConstroi()).getUuid(); } else { $Sonhador entity = new $Sonhador (this.getSonhadorConstroi()); uuidSonhadorConstroi = $Sonhador.find(entity); if (uuidSonhadorConstroi == null) { throw new TransientObjectException("Sonho", "sonhadorConstroi", "Sonhador"); } } } }protected java.util.List<Uuid> uuidSonhadores = new java.util.ArrayList<>(); @Override public java.util.List<org.obinject.sample.inception.Sonhador> getSonhadores() {java.util.List<org.obinject.sample.inception.Sonhador> superSonhadores = super.getSonhadores(); if ((superSonhadores.isEmpty()) && (!uuidSonhadores.isEmpty())) {for (Uuid uuid : uuidSonhadores) {superSonhadores.add($Sonhador.entityStructure.find(uuid)); } }return superSonhadores; }private void resetUuidSonhadores(){ uuidSonhadores.clear(); if (this.getSonhadores() != null) {for (Sonhador obj : this.getSonhadores()) { if (obj instanceof Entity) { uuidSonhadores.add(((Entity) obj).getUuid()); } else { $Sonhador entity = new $Sonhador (obj); uuidSonhadores.add($Sonhador.find(entity)); if (uuidSonhadores == null) { throw new TransientObjectException("Sonho", "sonhadores", "Sonhador"); } } } } }protected java.util.List<Uuid> uuidSombras = new java.util.ArrayList<>(); @Override public java.util.List<org.obinject.sample.inception.Sombra> getSombras() {java.util.List<org.obinject.sample.inception.Sombra> superSombras = super.getSombras(); if ((superSombras.isEmpty()) && (!uuidSombras.isEmpty())) {for (Uuid uuid : uuidSombras) {superSombras.add($Sombra.entityStructure.find(uuid)); } }return superSombras; }private void resetUuidSombras(){ uuidSombras.clear(); if (this.getSombras() != null) {for (Sombra obj : this.getSombras()) { if (obj instanceof Entity) { uuidSombras.add(((Entity) obj).getUuid()); } else { $Sombra entity = new $Sombra (obj); uuidSombras.add($Sombra.find(entity)); if (uuidSombras == null) { throw new TransientObjectException("Sonho", "sombras", "Sombra"); } } } } }@Override public boolean isEqual($Sonho obj) { return (this.getCodigo() == obj.getCodigo()) && (((this.getInicio() == null) && (obj.getInicio() == null)) || ((this.getInicio() != null) && (obj.getInicio() != null) && (this.getInicio().equals( obj.getInicio())))) && (((this.getTermino() == null) && (obj.getTermino() == null)) || ((this.getTermino() != null) && (obj.getTermino() != null) && (this.getTermino().equals( obj.getTermino())))) && (((this.getAvisoDisparo() == null) && (obj.getAvisoDisparo() == null)) || ((this.getAvisoDisparo() != null) && (obj.getAvisoDisparo() != null) && (this.getAvisoDisparo().equals( obj.getAvisoDisparo())))) && (this.getNivel() == obj.getNivel()) && (this.isLimbo() == obj.isLimbo()); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Sonho> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Sonho.find(this); if(uuidInject == null){ resetUuidSonhoAnterior(); resetUuidSonhoProximo(); resetUuidPasiv(); resetUuidSonhadorConstroi(); resetUuidSonhadores(); resetUuidSombras(); $Sonho.entityStructure.add(this); UniqueOneSonho.uniqueOneSonhoStructure.add(new UniqueOneSonho(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Sonho.find(this); if(uuidReject != null){ UniqueOneSonho.uniqueOneSonhoStructure.remove(new UniqueOneSonho(this, this.getUuid())); $Sonho.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Sonho.find(this); $Sonho entityOld = $Sonho.entityStructure.find(uuidOld); if(entityOld != null){ resetUuidSonhoAnterior(); resetUuidSonhoProximo(); resetUuidPasiv(); resetUuidSonhadorConstroi(); resetUuidSonhadores(); resetUuidSombras(); UniqueOneSonho uniqueOneSonhoOld = new UniqueOneSonho(entityOld, entityOld.getUuid()); UniqueOneSonho uniqueOneSonhoNew = new UniqueOneSonho(this, entityOld.getUuid()); if(uniqueOneSonhoOld.hasSameKey(uniqueOneSonhoNew)){ $Sonho.uniqueOneSonhoStructure.remove(uniqueOneSonhoOld); $Sonho.uniqueOneSonhoStructure.add(uniqueOneSonhoNew); } this.uuid = uuidOld; $Sonho.entityStructure.remove(entityOld); $Sonho.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Sonho entity) { UniqueOneSonho unique = new UniqueOneSonho (entity, entity.getUuid()); return $Sonho.uniqueOneSonhoStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Sonho.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setCodigo(pull.pullInteger()); this.setInicio(pull.pullCalendar()); this.setTermino(pull.pullCalendar()); this.setAvisoDisparo(pull.pullCalendar()); this.setNivel(pull.pullInteger()); this.setLimbo(pull.pullBoolean()); int totalSonhoAnterior = pull.pullInteger(); if(totalSonhoAnterior > 0){this.uuidSonhoAnterior = pull.pullUuid(); }int totalSonhoProximo = pull.pullInteger(); if(totalSonhoProximo > 0){this.uuidSonhoProximo = pull.pullUuid(); }int totalPasiv = pull.pullInteger(); if(totalPasiv > 0){this.uuidPasiv = pull.pullUuid(); }int totalSonhadorConstroi = pull.pullInteger(); if(totalSonhadorConstroi > 0){this.uuidSonhadorConstroi = pull.pullUuid(); }int totalSonhadores = pull.pullInteger(); for (int i = 0; i < totalSonhadores; i++) {this.uuidSonhadores.add(pull.pullUuid()); }int totalSombras = pull.pullInteger(); for (int i = 0; i < totalSombras; i++) {this.uuidSombras.add(pull.pullUuid()); }return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Sonho.classId); push.pushUuid(uuid); push.pushInteger(this.getCodigo()); push.pushCalendar(this.getInicio()); push.pushCalendar(this.getTermino()); push.pushCalendar(this.getAvisoDisparo()); push.pushInteger(this.getNivel()); push.pushBoolean(this.isLimbo()); if (this.uuidSonhoAnterior != null) { push.pushInteger(1); push.pushUuid(this.uuidSonhoAnterior); } else {push.pushInteger(0); } if (this.uuidSonhoProximo != null) { push.pushInteger(1); push.pushUuid(this.uuidSonhoProximo); } else {push.pushInteger(0); } if (this.uuidPasiv != null) { push.pushInteger(1); push.pushUuid(this.uuidPasiv); } else {push.pushInteger(0); } if (this.uuidSonhadorConstroi != null) { push.pushInteger(1); push.pushUuid(this.uuidSonhadorConstroi); } else {push.pushInteger(0); } push.pushInteger(this.uuidSonhadores.size()); for (Uuid uuidPush : this.uuidSonhadores) {push.pushUuid(uuidPush); }push.pushInteger(this.uuidSombras.size()); for (Uuid uuidPush : this.uuidSombras) {push.pushUuid(uuidPush); }} @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfInteger + Page.sizeOfCalendar + Page.sizeOfCalendar + Page.sizeOfCalendar + Page.sizeOfInteger + Page.sizeOfBoolean + Page.sizeOfEntity(this.uuidSonhoAnterior) + Page.sizeOfEntity(this.uuidSonhoProximo) + Page.sizeOfEntity(this.uuidPasiv) + Page.sizeOfEntity(this.uuidSonhadorConstroi) + Page.sizeOfEntityCollection(this.uuidSonhadores) + Page.sizeOfEntityCollection(this.uuidSombras); } static{ codigo.getSchemas().add( new Schema<$Sonho, UniqueOneSonho, Integer>() { @Override public $Sonho newEntity(Integer value) { $Sonho obj = new $Sonho(); obj.setCodigo(value); return obj; } @Override public UniqueOneSonho newKey(Integer value) { UniqueOneSonho obj = new UniqueOneSonho(); obj.setCodigo(value); return obj; } @Override public EntityStructure<$Sonho> getEntityStructure() { return $Sonho.entityStructure; } @Override public KeyStructure<UniqueOneSonho> getKeyStructure() { return UniqueOneSonho.uniqueOneSonhoStructure; } } ); } } 