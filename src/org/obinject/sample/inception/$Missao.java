package org.obinject.sample.inception; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; public class $Missao extends Missao implements Entity<$Missao> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Missao.classId == null) {$Missao.classId = Uuid.fromString("C4F7A16E-3D32-0275-72C1-4D61A936530A"); }return $Missao.classId; } public static final BTreeEntity<$Missao> entityStructure = new BTreeEntity<$Missao>(new File("build/classes/org/obinject/sample/inception/inception.dbo", 4096)){}; public static final BTree<UniqueOneMissao> uniqueOneMissaoStructure = new BTree<UniqueOneMissao>(new File("build/classes/org/obinject/sample/inception/inception.dbo", 4096)){}; public static final Attribute<Integer> codigo = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Missao)entity).getCodigo(); } }; public static final Attribute<java.lang.String> objetivo = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Missao)entity).getObjetivo(); } }; public static final Attribute<Boolean> cumprido = new Attribute<Boolean> (){ @Override public Boolean valueOfAttribute(Entity entity) { return ((Missao)entity).isCumprido(); } }; public static final Attribute<java.util.List> sonhadores = new Attribute<java.util.List> (){ @Override public java.util.List valueOfAttribute(Entity entity) { return ((Missao)entity).getSonhadores(); } }; public $Missao(){ this.uuid = Uuid.generator(); } public $Missao(Missao obj){ this.setCodigo(obj.getCodigo()); this.setObjetivo(obj.getObjetivo()); this.setCumprido(obj.isCumprido()); this.setSonhadores(obj.getSonhadores()); this.uuid = Uuid.generator(); } public $Missao(Missao obj, Uuid uuid){ this.setCodigo(obj.getCodigo()); this.setObjetivo(obj.getObjetivo()); this.setCumprido(obj.isCumprido()); this.setSonhadores(obj.getSonhadores()); this.uuid = uuid; } public $Missao($Missao obj){ this.setCodigo(obj.getCodigo()); this.setObjetivo(obj.getObjetivo()); this.setCumprido(obj.isCumprido()); this.setSonhadores(obj.getSonhadores()); this.uuid = obj.getUuid();; } public $Missao(Uuid uuid){ this.uuid = uuid; } protected java.util.List<Uuid> uuidSonhadores = new java.util.ArrayList<>(); @Override public java.util.List<org.obinject.sample.inception.Sonhador> getSonhadores() {java.util.List<org.obinject.sample.inception.Sonhador> superSonhadores = super.getSonhadores(); if ((superSonhadores.isEmpty()) && (!uuidSonhadores.isEmpty())) {for (Uuid uuid : uuidSonhadores) {superSonhadores.add($Sonhador.entityStructure.find(uuid)); } }return superSonhadores; }private void resetUuidSonhadores(){ uuidSonhadores.clear(); if (this.getSonhadores() != null) {for (Sonhador obj : this.getSonhadores()) { if (obj instanceof Entity) { uuidSonhadores.add(((Entity) obj).getUuid()); } else { $Sonhador entity = new $Sonhador (obj); uuidSonhadores.add($Sonhador.find(entity)); if (uuidSonhadores == null) { throw new TransientObjectException("Missao", "sonhadores", "Sonhador"); } } } } }@Override public boolean isEqual($Missao obj) { return (this.getCodigo() == obj.getCodigo()) && (((this.getObjetivo() == null) && (obj.getObjetivo() == null)) || ((this.getObjetivo() != null) && (obj.getObjetivo() != null) && (this.getObjetivo().equals( obj.getObjetivo())))) && (this.isCumprido() == obj.isCumprido()); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Missao> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Missao.find(this); if(uuidInject == null){ resetUuidSonhadores(); $Missao.entityStructure.add(this); UniqueOneMissao.uniqueOneMissaoStructure.add(new UniqueOneMissao(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Missao.find(this); if(uuidReject != null){ UniqueOneMissao.uniqueOneMissaoStructure.remove(new UniqueOneMissao(this, this.getUuid())); $Missao.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Missao.find(this); $Missao entityOld = $Missao.entityStructure.find(uuidOld); if(entityOld != null){ resetUuidSonhadores(); UniqueOneMissao uniqueOneMissaoOld = new UniqueOneMissao(entityOld, entityOld.getUuid()); UniqueOneMissao uniqueOneMissaoNew = new UniqueOneMissao(this, entityOld.getUuid()); if(uniqueOneMissaoOld.hasSameKey(uniqueOneMissaoNew)){ $Missao.uniqueOneMissaoStructure.remove(uniqueOneMissaoOld); $Missao.uniqueOneMissaoStructure.add(uniqueOneMissaoNew); } this.uuid = uuidOld; $Missao.entityStructure.remove(entityOld); $Missao.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Missao entity) { UniqueOneMissao unique = new UniqueOneMissao (entity, entity.getUuid()); return $Missao.uniqueOneMissaoStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Missao.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setCodigo(pull.pullInteger()); this.setObjetivo(pull.pullString()); this.setCumprido(pull.pullBoolean()); int totalSonhadores = pull.pullInteger(); for (int i = 0; i < totalSonhadores; i++) {this.uuidSonhadores.add(pull.pullUuid()); }return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Missao.classId); push.pushUuid(uuid); push.pushInteger(this.getCodigo()); push.pushString(this.getObjetivo()); push.pushBoolean(this.isCumprido()); push.pushInteger(this.uuidSonhadores.size()); for (Uuid uuidPush : this.uuidSonhadores) {push.pushUuid(uuidPush); }} @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfInteger + Page.sizeOfString(this.getObjetivo()) + Page.sizeOfBoolean + Page.sizeOfEntityCollection(this.uuidSonhadores); } static{ codigo.getSchemas().add( new Schema<$Missao, UniqueOneMissao, Integer>() { @Override public $Missao newEntity(Integer value) { $Missao obj = new $Missao(); obj.setCodigo(value); return obj; } @Override public UniqueOneMissao newKey(Integer value) { UniqueOneMissao obj = new UniqueOneMissao(); obj.setCodigo(value); return obj; } @Override public EntityStructure<$Missao> getEntityStructure() { return $Missao.entityStructure; } @Override public KeyStructure<UniqueOneMissao> getKeyStructure() { return UniqueOneMissao.uniqueOneMissaoStructure; } } ); } } 