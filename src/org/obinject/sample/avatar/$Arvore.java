package org.obinject.sample.avatar; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; public class $Arvore extends Arvore implements Entity<$Arvore> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Arvore.classId == null) {$Arvore.classId = Uuid.fromString("1FF15A55-45F6-80ED-E4EE-27809A8C8F0D"); }return $Arvore.classId; } public static final BTreeEntity<$Arvore> entityStructure = new BTreeEntity<$Arvore>(new File("build/classes/org/obinject/sample/avatar/avatar.dbo", 4096)){}; public static final BTree<UniqueOneArvore> uniqueOneArvoreStructure = new BTree<UniqueOneArvore>(new File("build/classes/org/obinject/sample/avatar/avatar.dbo", 4096)){}; public static final Attribute<java.lang.String> nome = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Arvore)entity).getNome(); } }; public $Arvore(){ this.uuid = Uuid.generator(); } public $Arvore(Arvore obj){ this.setNome(obj.getNome()); this.uuid = Uuid.generator(); } public $Arvore(Arvore obj, Uuid uuid){ this.setNome(obj.getNome()); this.uuid = uuid; } public $Arvore($Arvore obj){ this.setNome(obj.getNome()); this.uuid = obj.getUuid();; } public $Arvore(Uuid uuid){ this.uuid = uuid; } @Override public boolean isEqual($Arvore obj) {  return (((this.getNome() == null) && (obj.getNome() == null)) || ((this.getNome() != null) && (obj.getNome() != null) && (this.getNome().equals( obj.getNome())))); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Arvore> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Arvore.find(this); if(uuidInject == null){ $Arvore.entityStructure.add(this); UniqueOneArvore.uniqueOneArvoreStructure.add(new UniqueOneArvore(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Arvore.find(this); if(uuidReject != null){ UniqueOneArvore.uniqueOneArvoreStructure.remove(new UniqueOneArvore(this, this.getUuid())); $Arvore.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Arvore.find(this); $Arvore entityOld = $Arvore.entityStructure.find(uuidOld); if(entityOld != null){ UniqueOneArvore uniqueOneArvoreOld = new UniqueOneArvore(entityOld, entityOld.getUuid()); UniqueOneArvore uniqueOneArvoreNew = new UniqueOneArvore(this, entityOld.getUuid()); if(uniqueOneArvoreOld.hasSameKey(uniqueOneArvoreNew)){ $Arvore.uniqueOneArvoreStructure.remove(uniqueOneArvoreOld); $Arvore.uniqueOneArvoreStructure.add(uniqueOneArvoreNew); } this.uuid = uuidOld; $Arvore.entityStructure.remove(entityOld); $Arvore.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Arvore entity) { UniqueOneArvore unique = new UniqueOneArvore (entity, entity.getUuid()); return $Arvore.uniqueOneArvoreStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Arvore.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setNome(pull.pullString()); return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Arvore.classId); push.pushUuid(uuid); push.pushString(this.getNome()); } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfString(this.getNome()); } static{ nome.getSchemas().add( new Schema<$Arvore, UniqueOneArvore, java.lang.String>() { @Override public $Arvore newEntity(java.lang.String value) { $Arvore obj = new $Arvore(); obj.setNome(value); return obj; } @Override public UniqueOneArvore newKey(java.lang.String value) { UniqueOneArvore obj = new UniqueOneArvore(); obj.setNome(value); return obj; } @Override public EntityStructure<$Arvore> getEntityStructure() { return $Arvore.entityStructure; } @Override public KeyStructure<UniqueOneArvore> getKeyStructure() { return UniqueOneArvore.uniqueOneArvoreStructure; } } ); } } 