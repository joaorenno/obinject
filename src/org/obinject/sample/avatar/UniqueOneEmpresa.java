package org.obinject.sample.avatar; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.meta.Sort; import org.obinject.meta.Uuid; import org.obinject.storage.KeyStructure; public class UniqueOneEmpresa extends $Empresa implements Sort<UniqueOneEmpresa>, Comparable<UniqueOneEmpresa> { private static Uuid classId; public static Uuid getClassId(){ if (UniqueOneEmpresa.classId == null) {UniqueOneEmpresa.classId = Uuid.fromString("F50C05B6-811E-E95F-97AE-2870ED9F2EFA"); }return UniqueOneEmpresa.classId; } public UniqueOneEmpresa(){} public UniqueOneEmpresa($Empresa obj){ super(obj); } public UniqueOneEmpresa(Empresa obj, Uuid uuid){ super(obj, uuid); } public UniqueOneEmpresa(Uuid uuid){ super(uuid); } @Override public boolean hasSameKey(UniqueOneEmpresa obj) {  return (((this.getRegistro() == null) && (obj.getRegistro() == null)) || ((this.getRegistro() != null) && (obj.getRegistro() != null) && (this.getRegistro().equals( obj.getRegistro())))); } @Override public int compareTo(UniqueOneEmpresa obj) { if (((this.getRegistro() == null) || (this.getRegistro() != null) && (obj.getRegistro() != null) && (this.getRegistro().compareTo( obj.getRegistro()) < 0))) { return -1; } else if (((this.getRegistro() == null) || (this.getRegistro() != null) && (obj.getRegistro() != null) && (this.getRegistro().compareTo( obj.getRegistro()) == 0))) { return 0; } else {return 1; } } @Override public KeyStructure<UniqueOneEmpresa> getKeyStructure() { return uniqueOneEmpresaStructure; } @Override public boolean pullKey(byte[] array, int position) { PullPage pull = new PullPage(array, position); this.setRegistro(pull.pullString()); return true; } @Override public void pushKey(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushString(this.getRegistro()); } @Override public int sizeOfKey() { return  + Page.sizeOfString(this.getRegistro()); } } 