package org.obinject.sample.avatar; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; public class $Thanators extends Thanators implements Entity<$Thanators> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Thanators.classId == null) {$Thanators.classId = Uuid.fromString("71786C27-8B11-DF76-2C7C-BC5AF15345A3"); }return $Thanators.classId; } public static final BTreeEntity<$Thanators> entityStructure = new BTreeEntity<$Thanators>(new File("build/classes/org/obinject/sample/avatar/avatar.dbo", 4096)){}; public static final Attribute<java.lang.String> nome = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Thanators)entity).getNome(); } }; public static final Attribute<java.lang.String> habitat = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Thanators)entity).getHabitat(); } }; public static final Attribute<org.obinject.sample.avatar.Conexao> conexao = new Attribute<org.obinject.sample.avatar.Conexao> (){ @Override public org.obinject.sample.avatar.Conexao valueOfAttribute(Entity entity) { return ((Thanators)entity).getConexao(); } }; public static final Attribute<Integer> força = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Thanators)entity).getForça(); } }; public static final Attribute<Integer> velocidade = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Thanators)entity).getVelocidade(); } }; public static final Attribute<Integer> pos_cadeia_alim = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Thanators)entity).getPos_cadeia_alim(); } }; public $Thanators(){ this.uuid = Uuid.generator(); } public $Thanators(Thanators obj){ this.setNome(obj.getNome()); this.setHabitat(obj.getHabitat()); this.setConexao(obj.getConexao()); this.setForça(obj.getForça()); this.setVelocidade(obj.getVelocidade()); this.setPos_cadeia_alim(obj.getPos_cadeia_alim()); this.uuid = Uuid.generator(); } public $Thanators(Thanators obj, Uuid uuid){ this.setNome(obj.getNome()); this.setHabitat(obj.getHabitat()); this.setConexao(obj.getConexao()); this.setForça(obj.getForça()); this.setVelocidade(obj.getVelocidade()); this.setPos_cadeia_alim(obj.getPos_cadeia_alim()); this.uuid = uuid; } public $Thanators($Thanators obj){ this.setNome(obj.getNome()); this.setHabitat(obj.getHabitat()); this.setConexao(obj.getConexao()); this.setForça(obj.getForça()); this.setVelocidade(obj.getVelocidade()); this.setPos_cadeia_alim(obj.getPos_cadeia_alim()); this.uuid = obj.getUuid();; } public $Thanators(Uuid uuid){ this.uuid = uuid; } protected Uuid uuidConexao; @Override public Conexao getConexao(){ Conexao superConexao = super.getConexao(); if (superConexao == null && uuidConexao != null) {superConexao = $Conexao.entityStructure.find(uuidConexao); this.setConexao(superConexao); }return superConexao; }private void resetUuidConexao() { if (this.getConexao() != null) { if (this.getConexao() instanceof Entity) { uuidConexao = ((Entity) this.getConexao()).getUuid(); } else { $Conexao entity = new $Conexao (this.getConexao()); uuidConexao = $Conexao.find(entity); if (uuidConexao == null) { throw new TransientObjectException("Thanators", "conexao", "Conexao"); } } } }@Override public boolean isEqual($Thanators obj) {  return (((this.getNome() == null) && (obj.getNome() == null)) || ((this.getNome() != null) && (obj.getNome() != null) && (this.getNome().equals( obj.getNome())))) && (((this.getHabitat() == null) && (obj.getHabitat() == null)) || ((this.getHabitat() != null) && (obj.getHabitat() != null) && (this.getHabitat().equals( obj.getHabitat())))) && (this.getForça() == obj.getForça()) && (this.getVelocidade() == obj.getVelocidade()) && (this.getPos_cadeia_alim() == obj.getPos_cadeia_alim()); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Thanators> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Thanators.find(this); if(uuidInject == null){ resetUuidConexao(); $Thanators.entityStructure.add(this); UniqueOneSer.uniqueOneSerStructure.add(new UniqueOneSer(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Thanators.find(this); if(uuidReject != null){ UniqueOneSer.uniqueOneSerStructure.remove(new UniqueOneSer(this, this.getUuid())); $Thanators.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Thanators.find(this); $Thanators entityOld = $Thanators.entityStructure.find(uuidOld); if(entityOld != null){ resetUuidConexao(); UniqueOneSer uniqueOneSerOld = new UniqueOneSer(entityOld, entityOld.getUuid()); UniqueOneSer uniqueOneSerNew = new UniqueOneSer(this, entityOld.getUuid()); if(uniqueOneSerOld.hasSameKey(uniqueOneSerNew)){ $Ser.uniqueOneSerStructure.remove(uniqueOneSerOld); $Ser.uniqueOneSerStructure.add(uniqueOneSerNew); } this.uuid = uuidOld; $Thanators.entityStructure.remove(entityOld); $Thanators.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Thanators entity) { UniqueOneSer unique = new UniqueOneSer (entity, entity.getUuid()); return $Ser.uniqueOneSerStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Thanators.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setNome(pull.pullString()); this.setHabitat(pull.pullString()); int totalConexao = pull.pullInteger(); if(totalConexao > 0){this.uuidConexao = pull.pullUuid(); }this.setForça(pull.pullInteger()); this.setVelocidade(pull.pullInteger()); this.setPos_cadeia_alim(pull.pullInteger()); return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Thanators.classId); push.pushUuid(uuid); push.pushString(this.getNome()); push.pushString(this.getHabitat()); if (this.uuidConexao != null) { push.pushInteger(1); push.pushUuid(this.uuidConexao); } else {push.pushInteger(0); } push.pushInteger(this.getForça()); push.pushInteger(this.getVelocidade()); push.pushInteger(this.getPos_cadeia_alim()); } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfString(this.getNome()) + Page.sizeOfString(this.getHabitat()) + Page.sizeOfEntity(this.uuidConexao) + Page.sizeOfInteger + Page.sizeOfInteger + Page.sizeOfInteger; } static{ nome.getSchemas().add( new Schema<$Thanators, UniqueOneSer, java.lang.String>() { @Override public $Thanators newEntity(java.lang.String value) { $Thanators obj = new $Thanators(); obj.setNome(value); return obj; } @Override public UniqueOneSer newKey(java.lang.String value) { UniqueOneSer obj = new UniqueOneSer(); obj.setNome(value); return obj; } @Override public EntityStructure<$Thanators> getEntityStructure() { return $Thanators.entityStructure; } @Override public KeyStructure<UniqueOneSer> getKeyStructure() { return UniqueOneSer.uniqueOneSerStructure; } } ); } } 