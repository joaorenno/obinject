package org.obinject.sample.avatar; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; public class $Maquinario extends Maquinario implements Entity<$Maquinario> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Maquinario.classId == null) {$Maquinario.classId = Uuid.fromString("5771EE5D-A227-ACE0-B9D4-3563443FB6AF"); }return $Maquinario.classId; } public static final BTreeEntity<$Maquinario> entityStructure = new BTreeEntity<$Maquinario>(new File("build/classes/org/obinject/sample/avatar/avatar.dbo", 4096)){}; public static final BTree<UniqueOneMaquinario> uniqueOneMaquinarioStructure = new BTree<UniqueOneMaquinario>(new File("build/classes/org/obinject/sample/avatar/avatar.dbo", 4096)){}; public static final Attribute<java.lang.String> nome = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Maquinario)entity).getNome(); } }; public static final Attribute<java.lang.String> tipo = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Maquinario)entity).getTipo(); } }; public static final Attribute<Integer> peso = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Maquinario)entity).getPeso(); } }; public static final Attribute<Integer> potencia = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Maquinario)entity).getPotencia(); } }; public static final Attribute<Integer> capacidade = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Maquinario)entity).getCapacidade(); } }; public $Maquinario(){ this.uuid = Uuid.generator(); } public $Maquinario(Maquinario obj){ this.setNome(obj.getNome()); this.setTipo(obj.getTipo()); this.setPeso(obj.getPeso()); this.setPotencia(obj.getPotencia()); this.setCapacidade(obj.getCapacidade()); this.uuid = Uuid.generator(); } public $Maquinario(Maquinario obj, Uuid uuid){ this.setNome(obj.getNome()); this.setTipo(obj.getTipo()); this.setPeso(obj.getPeso()); this.setPotencia(obj.getPotencia()); this.setCapacidade(obj.getCapacidade()); this.uuid = uuid; } public $Maquinario($Maquinario obj){ this.setNome(obj.getNome()); this.setTipo(obj.getTipo()); this.setPeso(obj.getPeso()); this.setPotencia(obj.getPotencia()); this.setCapacidade(obj.getCapacidade()); this.uuid = obj.getUuid();; } public $Maquinario(Uuid uuid){ this.uuid = uuid; } @Override public boolean isEqual($Maquinario obj) {  return (((this.getNome() == null) && (obj.getNome() == null)) || ((this.getNome() != null) && (obj.getNome() != null) && (this.getNome().equals( obj.getNome())))) && (((this.getTipo() == null) && (obj.getTipo() == null)) || ((this.getTipo() != null) && (obj.getTipo() != null) && (this.getTipo().equals( obj.getTipo())))) && (this.getPeso() == obj.getPeso()) && (this.getPotencia() == obj.getPotencia()) && (this.getCapacidade() == obj.getCapacidade()); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Maquinario> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Maquinario.find(this); if(uuidInject == null){ $Maquinario.entityStructure.add(this); UniqueOneMaquinario.uniqueOneMaquinarioStructure.add(new UniqueOneMaquinario(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Maquinario.find(this); if(uuidReject != null){ UniqueOneMaquinario.uniqueOneMaquinarioStructure.remove(new UniqueOneMaquinario(this, this.getUuid())); $Maquinario.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Maquinario.find(this); $Maquinario entityOld = $Maquinario.entityStructure.find(uuidOld); if(entityOld != null){ UniqueOneMaquinario uniqueOneMaquinarioOld = new UniqueOneMaquinario(entityOld, entityOld.getUuid()); UniqueOneMaquinario uniqueOneMaquinarioNew = new UniqueOneMaquinario(this, entityOld.getUuid()); if(uniqueOneMaquinarioOld.hasSameKey(uniqueOneMaquinarioNew)){ $Maquinario.uniqueOneMaquinarioStructure.remove(uniqueOneMaquinarioOld); $Maquinario.uniqueOneMaquinarioStructure.add(uniqueOneMaquinarioNew); } this.uuid = uuidOld; $Maquinario.entityStructure.remove(entityOld); $Maquinario.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Maquinario entity) { UniqueOneMaquinario unique = new UniqueOneMaquinario (entity, entity.getUuid()); return $Maquinario.uniqueOneMaquinarioStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Maquinario.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setNome(pull.pullString()); this.setTipo(pull.pullString()); this.setPeso(pull.pullInteger()); this.setPotencia(pull.pullInteger()); this.setCapacidade(pull.pullInteger()); return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Maquinario.classId); push.pushUuid(uuid); push.pushString(this.getNome()); push.pushString(this.getTipo()); push.pushInteger(this.getPeso()); push.pushInteger(this.getPotencia()); push.pushInteger(this.getCapacidade()); } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfString(this.getNome()) + Page.sizeOfString(this.getTipo()) + Page.sizeOfInteger + Page.sizeOfInteger + Page.sizeOfInteger; } static{ nome.getSchemas().add( new Schema<$Maquinario, UniqueOneMaquinario, java.lang.String>() { @Override public $Maquinario newEntity(java.lang.String value) { $Maquinario obj = new $Maquinario(); obj.setNome(value); return obj; } @Override public UniqueOneMaquinario newKey(java.lang.String value) { UniqueOneMaquinario obj = new UniqueOneMaquinario(); obj.setNome(value); return obj; } @Override public EntityStructure<$Maquinario> getEntityStructure() { return $Maquinario.entityStructure; } @Override public KeyStructure<UniqueOneMaquinario> getKeyStructure() { return UniqueOneMaquinario.uniqueOneMaquinarioStructure; } } ); } } 