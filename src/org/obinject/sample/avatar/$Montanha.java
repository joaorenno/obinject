package org.obinject.sample.avatar; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; public class $Montanha extends Montanha implements Entity<$Montanha> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Montanha.classId == null) {$Montanha.classId = Uuid.fromString("4C7E2682-E362-BE5D-63A0-C099C1B8128D"); }return $Montanha.classId; } public static final BTreeEntity<$Montanha> entityStructure = new BTreeEntity<$Montanha>(new File("build/classes/org/obinject/sample/avatar/avatar.dbo", 4096)){}; public static final Attribute<java.lang.String> nome = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Montanha)entity).getNome(); } }; public static final Attribute<java.util.List> arvores = new Attribute<java.util.List> (){ @Override public java.util.List valueOfAttribute(Entity entity) { return ((Montanha)entity).getArvores(); } }; public static final Attribute<java.util.List> jazidas = new Attribute<java.util.List> (){ @Override public java.util.List valueOfAttribute(Entity entity) { return ((Montanha)entity).getJazidas(); } }; public static final Attribute<java.util.List> batalha = new Attribute<java.util.List> (){ @Override public java.util.List valueOfAttribute(Entity entity) { return ((Montanha)entity).getBatalha(); } }; public static final Attribute<Integer> altura = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Montanha)entity).getAltura(); } }; public static final Attribute<Boolean> movimento = new Attribute<Boolean> (){ @Override public Boolean valueOfAttribute(Entity entity) { return ((Montanha)entity).isMovimento(); } }; public static final Attribute<java.util.List> banshee = new Attribute<java.util.List> (){ @Override public java.util.List valueOfAttribute(Entity entity) { return ((Montanha)entity).getBanshee(); } }; public $Montanha(){ this.uuid = Uuid.generator(); } public $Montanha(Montanha obj){ this.setNome(obj.getNome()); this.setArvores(obj.getArvores()); this.setJazidas(obj.getJazidas()); this.setBatalha(obj.getBatalha()); this.setAltura(obj.getAltura()); this.setMovimento(obj.isMovimento()); this.setBanshee(obj.getBanshee()); this.uuid = Uuid.generator(); } public $Montanha(Montanha obj, Uuid uuid){ this.setNome(obj.getNome()); this.setArvores(obj.getArvores()); this.setJazidas(obj.getJazidas()); this.setBatalha(obj.getBatalha()); this.setAltura(obj.getAltura()); this.setMovimento(obj.isMovimento()); this.setBanshee(obj.getBanshee()); this.uuid = uuid; } public $Montanha($Montanha obj){ this.setNome(obj.getNome()); this.setArvores(obj.getArvores()); this.setJazidas(obj.getJazidas()); this.setBatalha(obj.getBatalha()); this.setAltura(obj.getAltura()); this.setMovimento(obj.isMovimento()); this.setBanshee(obj.getBanshee()); this.uuid = obj.getUuid();; } public $Montanha(Uuid uuid){ this.uuid = uuid; } protected java.util.List<Uuid> uuidArvores = new java.util.ArrayList<>(); @Override public java.util.List<org.obinject.sample.avatar.Arvore> getArvores() {java.util.List<org.obinject.sample.avatar.Arvore> superArvores = super.getArvores(); if ((superArvores.isEmpty()) && (!uuidArvores.isEmpty())) {for (Uuid uuid : uuidArvores) {superArvores.add($Arvore.entityStructure.find(uuid)); } }return superArvores; }private void resetUuidArvores(){ uuidArvores.clear(); if (this.getArvores() != null) {for (Arvore obj : this.getArvores()) { if (obj instanceof Entity) { uuidArvores.add(((Entity) obj).getUuid()); } else { $Arvore entity = new $Arvore (obj); uuidArvores.add($Arvore.find(entity)); if (uuidArvores == null) { throw new TransientObjectException("Montanha", "arvores", "Arvore"); } } } } }protected java.util.List<Uuid> uuidJazidas = new java.util.ArrayList<>(); @Override public java.util.List<org.obinject.sample.avatar.Jazida> getJazidas() {java.util.List<org.obinject.sample.avatar.Jazida> superJazidas = super.getJazidas(); if ((superJazidas.isEmpty()) && (!uuidJazidas.isEmpty())) {for (Uuid uuid : uuidJazidas) {superJazidas.add($Jazida.entityStructure.find(uuid)); } }return superJazidas; }private void resetUuidJazidas(){ uuidJazidas.clear(); if (this.getJazidas() != null) {for (Jazida obj : this.getJazidas()) { if (obj instanceof Entity) { uuidJazidas.add(((Entity) obj).getUuid()); } else { $Jazida entity = new $Jazida (obj); uuidJazidas.add($Jazida.find(entity)); if (uuidJazidas == null) { throw new TransientObjectException("Montanha", "jazidas", "Jazida"); } } } } }protected java.util.List<Uuid> uuidBatalha = new java.util.ArrayList<>(); @Override public java.util.List<org.obinject.sample.avatar.Batalha> getBatalha() {java.util.List<org.obinject.sample.avatar.Batalha> superBatalha = super.getBatalha(); if ((superBatalha.isEmpty()) && (!uuidBatalha.isEmpty())) {for (Uuid uuid : uuidBatalha) {superBatalha.add($Batalha.entityStructure.find(uuid)); } }return superBatalha; }private void resetUuidBatalha(){ uuidBatalha.clear(); if (this.getBatalha() != null) {for (Batalha obj : this.getBatalha()) { if (obj instanceof Entity) { uuidBatalha.add(((Entity) obj).getUuid()); } else { $Batalha entity = new $Batalha (obj); uuidBatalha.add($Batalha.find(entity)); if (uuidBatalha == null) { throw new TransientObjectException("Montanha", "batalha", "Batalha"); } } } } }protected java.util.List<Uuid> uuidBanshee = new java.util.ArrayList<>(); @Override public java.util.List<org.obinject.sample.avatar.Banshee> getBanshee() {java.util.List<org.obinject.sample.avatar.Banshee> superBanshee = super.getBanshee(); if ((superBanshee.isEmpty()) && (!uuidBanshee.isEmpty())) {for (Uuid uuid : uuidBanshee) {superBanshee.add($Banshee.entityStructure.find(uuid)); } }return superBanshee; }private void resetUuidBanshee(){ uuidBanshee.clear(); if (this.getBanshee() != null) {for (Banshee obj : this.getBanshee()) { if (obj instanceof Entity) { uuidBanshee.add(((Entity) obj).getUuid()); } else { $Banshee entity = new $Banshee (obj); uuidBanshee.add($Banshee.find(entity)); if (uuidBanshee == null) { throw new TransientObjectException("Montanha", "banshee", "Banshee"); } } } } }@Override public boolean isEqual($Montanha obj) {  return (((this.getNome() == null) && (obj.getNome() == null)) || ((this.getNome() != null) && (obj.getNome() != null) && (this.getNome().equals( obj.getNome())))) && (this.getAltura() == obj.getAltura()) && (this.isMovimento() == obj.isMovimento()); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Montanha> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Montanha.find(this); if(uuidInject == null){ resetUuidArvores(); resetUuidJazidas(); resetUuidBatalha(); resetUuidBanshee(); $Montanha.entityStructure.add(this); UniqueOneRegiao.uniqueOneRegiaoStructure.add(new UniqueOneRegiao(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Montanha.find(this); if(uuidReject != null){ UniqueOneRegiao.uniqueOneRegiaoStructure.remove(new UniqueOneRegiao(this, this.getUuid())); $Montanha.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Montanha.find(this); $Montanha entityOld = $Montanha.entityStructure.find(uuidOld); if(entityOld != null){ resetUuidArvores(); resetUuidJazidas(); resetUuidBatalha(); resetUuidBanshee(); UniqueOneRegiao uniqueOneRegiaoOld = new UniqueOneRegiao(entityOld, entityOld.getUuid()); UniqueOneRegiao uniqueOneRegiaoNew = new UniqueOneRegiao(this, entityOld.getUuid()); if(uniqueOneRegiaoOld.hasSameKey(uniqueOneRegiaoNew)){ $Regiao.uniqueOneRegiaoStructure.remove(uniqueOneRegiaoOld); $Regiao.uniqueOneRegiaoStructure.add(uniqueOneRegiaoNew); } this.uuid = uuidOld; $Montanha.entityStructure.remove(entityOld); $Montanha.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Montanha entity) { UniqueOneRegiao unique = new UniqueOneRegiao (entity, entity.getUuid()); return $Regiao.uniqueOneRegiaoStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Montanha.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setNome(pull.pullString()); int totalArvores = pull.pullInteger(); for (int i = 0; i < totalArvores; i++) {this.uuidArvores.add(pull.pullUuid()); }int totalJazidas = pull.pullInteger(); for (int i = 0; i < totalJazidas; i++) {this.uuidJazidas.add(pull.pullUuid()); }int totalBatalha = pull.pullInteger(); for (int i = 0; i < totalBatalha; i++) {this.uuidBatalha.add(pull.pullUuid()); }this.setAltura(pull.pullInteger()); this.setMovimento(pull.pullBoolean()); int totalBanshee = pull.pullInteger(); for (int i = 0; i < totalBanshee; i++) {this.uuidBanshee.add(pull.pullUuid()); }return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Montanha.classId); push.pushUuid(uuid); push.pushString(this.getNome()); push.pushInteger(this.uuidArvores.size()); for (Uuid uuidPush : this.uuidArvores) {push.pushUuid(uuidPush); }push.pushInteger(this.uuidJazidas.size()); for (Uuid uuidPush : this.uuidJazidas) {push.pushUuid(uuidPush); }push.pushInteger(this.uuidBatalha.size()); for (Uuid uuidPush : this.uuidBatalha) {push.pushUuid(uuidPush); }push.pushInteger(this.getAltura()); push.pushBoolean(this.isMovimento()); push.pushInteger(this.uuidBanshee.size()); for (Uuid uuidPush : this.uuidBanshee) {push.pushUuid(uuidPush); }} @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfString(this.getNome()) + Page.sizeOfEntityCollection(this.uuidArvores) + Page.sizeOfEntityCollection(this.uuidJazidas) + Page.sizeOfEntityCollection(this.uuidBatalha) + Page.sizeOfInteger + Page.sizeOfBoolean + Page.sizeOfEntityCollection(this.uuidBanshee); } static{ nome.getSchemas().add( new Schema<$Montanha, UniqueOneRegiao, java.lang.String>() { @Override public $Montanha newEntity(java.lang.String value) { $Montanha obj = new $Montanha(); obj.setNome(value); return obj; } @Override public UniqueOneRegiao newKey(java.lang.String value) { UniqueOneRegiao obj = new UniqueOneRegiao(); obj.setNome(value); return obj; } @Override public EntityStructure<$Montanha> getEntityStructure() { return $Montanha.entityStructure; } @Override public KeyStructure<UniqueOneRegiao> getKeyStructure() { return UniqueOneRegiao.uniqueOneRegiaoStructure; } } ); } } 