package org.obinject.sample.join.pcuk; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; import org.obinject.storage.MTree; import org.obinject.storage.RTree; public class $PostCode extends PostCode implements Entity<$PostCode> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($PostCode.classId == null) {$PostCode.classId = Uuid.fromString("B75097FF-8F3B-DB5E-7DF8-3CF199DD11B7"); }return $PostCode.classId; } public static final BTreeEntity<$PostCode> entityStructure = new BTreeEntity<$PostCode>(new File("build/classes/org/obinject/sample/join/pcuk/pcuk.dbo", 4096)){}; public static final BTree<UniqueOnePostCode> uniqueOnePostCodeStructure = new BTree<UniqueOnePostCode>(new File("build/classes/org/obinject/sample/join/pcuk/pcuk.dbo", 4096)){}; public static final RTree<RectangleOnePostCode> rectangleOnePostCodeStructure = new RTree<RectangleOnePostCode>(new File("build/classes/org/obinject/sample/join/pcuk/pcuk.dbo", 4096)){}; public static final MTree<PointOnePostCode> pointOnePostCodeStructure = new MTree<PointOnePostCode>(new File("build/classes/org/obinject/sample/join/pcuk/pcuk.dbo", 4096)){}; public static final Attribute<java.lang.String> code = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((PostCode)entity).getCode(); } }; public static final Attribute<Double> latitude = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((PostCode)entity).getLatitude(); } }; public static final Attribute<Double> longitude = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((PostCode)entity).getLongitude(); } }; public $PostCode(){ this.uuid = Uuid.generator(); } public $PostCode(PostCode obj){ this.setCode(obj.getCode()); this.setLatitude(obj.getLatitude()); this.setLongitude(obj.getLongitude()); this.uuid = Uuid.generator(); } public $PostCode(PostCode obj, Uuid uuid){ this.setCode(obj.getCode()); this.setLatitude(obj.getLatitude()); this.setLongitude(obj.getLongitude()); this.uuid = uuid; } public $PostCode($PostCode obj){ this.setCode(obj.getCode()); this.setLatitude(obj.getLatitude()); this.setLongitude(obj.getLongitude()); this.uuid = obj.getUuid();; } public $PostCode(Uuid uuid){ this.uuid = uuid; } @Override public boolean isEqual($PostCode obj) {  return (((this.getCode() == null) && (obj.getCode() == null)) || ((this.getCode() != null) && (obj.getCode() != null) && (this.getCode().equals( obj.getCode())))) && (this.getLatitude() == obj.getLatitude()) && (this.getLongitude() == obj.getLongitude()); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$PostCode> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $PostCode.find(this); if(uuidInject == null){ $PostCode.entityStructure.add(this); UniqueOnePostCode.uniqueOnePostCodeStructure.add(new UniqueOnePostCode(this, this.getUuid())); RectangleOnePostCode.rectangleOnePostCodeStructure.add(new RectangleOnePostCode(this, this.getUuid())); PointOnePostCode.pointOnePostCodeStructure.add(new PointOnePostCode(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $PostCode.find(this); if(uuidReject != null){ UniqueOnePostCode.uniqueOnePostCodeStructure.remove(new UniqueOnePostCode(this, this.getUuid())); RectangleOnePostCode.rectangleOnePostCodeStructure.remove(new RectangleOnePostCode(this, this.getUuid())); PointOnePostCode.pointOnePostCodeStructure.remove(new PointOnePostCode(this, this.getUuid())); $PostCode.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $PostCode.find(this); $PostCode entityOld = $PostCode.entityStructure.find(uuidOld); if(entityOld != null){ UniqueOnePostCode uniqueOnePostCodeOld = new UniqueOnePostCode(entityOld, entityOld.getUuid()); UniqueOnePostCode uniqueOnePostCodeNew = new UniqueOnePostCode(this, entityOld.getUuid()); if(uniqueOnePostCodeOld.hasSameKey(uniqueOnePostCodeNew)){ $PostCode.uniqueOnePostCodeStructure.remove(uniqueOnePostCodeOld); $PostCode.uniqueOnePostCodeStructure.add(uniqueOnePostCodeNew); } RectangleOnePostCode rectangleOnePostCodeOld = new RectangleOnePostCode(entityOld, entityOld.getUuid()); RectangleOnePostCode rectangleOnePostCodeNew = new RectangleOnePostCode(this, entityOld.getUuid()); if(rectangleOnePostCodeOld.hasSameKey(rectangleOnePostCodeNew)){ $PostCode.rectangleOnePostCodeStructure.remove(rectangleOnePostCodeOld); $PostCode.rectangleOnePostCodeStructure.add(rectangleOnePostCodeNew); } PointOnePostCode pointOnePostCodeOld = new PointOnePostCode(entityOld, entityOld.getUuid()); PointOnePostCode pointOnePostCodeNew = new PointOnePostCode(this, entityOld.getUuid()); if(pointOnePostCodeOld.hasSameKey(pointOnePostCodeNew)){ $PostCode.pointOnePostCodeStructure.remove(pointOnePostCodeOld); $PostCode.pointOnePostCodeStructure.add(pointOnePostCodeNew); } this.uuid = uuidOld; $PostCode.entityStructure.remove(entityOld); $PostCode.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($PostCode entity) { UniqueOnePostCode unique = new UniqueOnePostCode (entity, entity.getUuid()); return $PostCode.uniqueOnePostCodeStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($PostCode.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setCode(pull.pullString()); this.setLatitude(pull.pullDouble()); this.setLongitude(pull.pullDouble()); return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($PostCode.classId); push.pushUuid(uuid); push.pushString(this.getCode()); push.pushDouble(this.getLatitude()); push.pushDouble(this.getLongitude()); } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfString(this.getCode()) + Page.sizeOfDouble + Page.sizeOfDouble; } static{ code.getSchemas().add( new Schema<$PostCode, UniqueOnePostCode, java.lang.String>() { @Override public $PostCode newEntity(java.lang.String value) { $PostCode obj = new $PostCode(); obj.setCode(value); return obj; } @Override public UniqueOnePostCode newKey(java.lang.String value) { UniqueOnePostCode obj = new UniqueOnePostCode(); obj.setCode(value); return obj; } @Override public EntityStructure<$PostCode> getEntityStructure() { return $PostCode.entityStructure; } @Override public KeyStructure<UniqueOnePostCode> getKeyStructure() { return UniqueOnePostCode.uniqueOnePostCodeStructure; } } ); latitude.getSchemas().add( new Schema<$PostCode, RectangleOnePostCode, Double>() { @Override public $PostCode newEntity(Double value) { $PostCode obj = new $PostCode(); obj.setLatitude(value); return obj; } @Override public RectangleOnePostCode newKey(Double value) { RectangleOnePostCode obj = new RectangleOnePostCode(); obj.setLatitude(value); return obj; } @Override public EntityStructure<$PostCode> getEntityStructure() { return $PostCode.entityStructure; } @Override public KeyStructure<RectangleOnePostCode> getKeyStructure() { return RectangleOnePostCode.rectangleOnePostCodeStructure; } } ); latitude.getSchemas().add( new Schema<$PostCode, PointOnePostCode, Double>() { @Override public $PostCode newEntity(Double value) { $PostCode obj = new $PostCode(); obj.setLatitude(value); return obj; } @Override public PointOnePostCode newKey(Double value) { PointOnePostCode obj = new PointOnePostCode(); obj.setLatitude(value); return obj; } @Override public EntityStructure<$PostCode> getEntityStructure() { return $PostCode.entityStructure; } @Override public KeyStructure<PointOnePostCode> getKeyStructure() { return PointOnePostCode.pointOnePostCodeStructure; } } ); longitude.getSchemas().add( new Schema<$PostCode, RectangleOnePostCode, Double>() { @Override public $PostCode newEntity(Double value) { $PostCode obj = new $PostCode(); obj.setLongitude(value); return obj; } @Override public RectangleOnePostCode newKey(Double value) { RectangleOnePostCode obj = new RectangleOnePostCode(); obj.setLongitude(value); return obj; } @Override public EntityStructure<$PostCode> getEntityStructure() { return $PostCode.entityStructure; } @Override public KeyStructure<RectangleOnePostCode> getKeyStructure() { return RectangleOnePostCode.rectangleOnePostCodeStructure; } } ); longitude.getSchemas().add( new Schema<$PostCode, PointOnePostCode, Double>() { @Override public $PostCode newEntity(Double value) { $PostCode obj = new $PostCode(); obj.setLongitude(value); return obj; } @Override public PointOnePostCode newKey(Double value) { PointOnePostCode obj = new PointOnePostCode(); obj.setLongitude(value); return obj; } @Override public EntityStructure<$PostCode> getEntityStructure() { return $PostCode.entityStructure; } @Override public KeyStructure<PointOnePostCode> getKeyStructure() { return PointOnePostCode.pointOnePostCodeStructure; } } ); } } 