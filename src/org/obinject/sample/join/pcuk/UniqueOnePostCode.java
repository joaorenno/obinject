package org.obinject.sample.join.pcuk; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.meta.Sort; import org.obinject.meta.Uuid; import org.obinject.storage.KeyStructure; public class UniqueOnePostCode extends $PostCode implements Sort<UniqueOnePostCode>, Comparable<UniqueOnePostCode> { private static Uuid classId; public static Uuid getClassId(){ if (UniqueOnePostCode.classId == null) {UniqueOnePostCode.classId = Uuid.fromString("E5F19717-ABFC-A06D-F62C-1984F3AA54F5"); }return UniqueOnePostCode.classId; } public UniqueOnePostCode(){} public UniqueOnePostCode($PostCode obj){ super(obj); } public UniqueOnePostCode(PostCode obj, Uuid uuid){ super(obj, uuid); } public UniqueOnePostCode(Uuid uuid){ super(uuid); } @Override public boolean hasSameKey(UniqueOnePostCode obj) {  return (((this.getCode() == null) && (obj.getCode() == null)) || ((this.getCode() != null) && (obj.getCode() != null) && (this.getCode().equals( obj.getCode())))); } @Override public int compareTo(UniqueOnePostCode obj) { if (((this.getCode() == null) || (this.getCode() != null) && (obj.getCode() != null) && (this.getCode().compareTo( obj.getCode()) < 0))) { return -1; } else if (((this.getCode() == null) || (this.getCode() != null) && (obj.getCode() != null) && (this.getCode().compareTo( obj.getCode()) == 0))) { return 0; } else {return 1; } } @Override public KeyStructure<UniqueOnePostCode> getKeyStructure() { return uniqueOnePostCodeStructure; } @Override public boolean pullKey(byte[] array, int position) { PullPage pull = new PullPage(array, position); this.setCode(pull.pullString()); return true; } @Override public void pushKey(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushString(this.getCode()); } @Override public int sizeOfKey() { return  + Page.sizeOfString(this.getCode()); } } 