package org.obinject.sample.join.uniform; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; import org.obinject.storage.MTree; import org.obinject.storage.RTree; public class $Ponto extends Ponto implements Entity<$Ponto> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Ponto.classId == null) {$Ponto.classId = Uuid.fromString("8B0A007A-DE3A-1A76-CABD-0FF3A6425225"); }return $Ponto.classId; } public static final BTreeEntity<$Ponto> entityStructure = new BTreeEntity<$Ponto>(new File("build/classes/org/obinject/sample/join/uniform/uniform.dbo", 4096)){}; public static final BTree<UniqueOnePonto> uniqueOnePontoStructure = new BTree<UniqueOnePonto>(new File("build/classes/org/obinject/sample/join/uniform/uniform.dbo", 4096)){}; public static final RTree<RectangleOnePonto> rectangleOnePontoStructure = new RTree<RectangleOnePonto>(new File("build/classes/org/obinject/sample/join/uniform/uniform.dbo", 4096)){}; public static final MTree<PointOnePonto> pointOnePontoStructure = new MTree<PointOnePonto>(new File("build/classes/org/obinject/sample/join/uniform/uniform.dbo", 4096)){}; public static final Attribute<java.lang.String> identifier = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Ponto)entity).getIdentifier(); } }; public static final Attribute<Integer> x = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Ponto)entity).getX(); } }; public static final Attribute<Integer> y = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Ponto)entity).getY(); } }; public $Ponto(){ this.uuid = Uuid.generator(); } public $Ponto(Ponto obj){ this.setIdentifier(obj.getIdentifier()); this.setX(obj.getX()); this.setY(obj.getY()); this.uuid = Uuid.generator(); } public $Ponto(Ponto obj, Uuid uuid){ this.setIdentifier(obj.getIdentifier()); this.setX(obj.getX()); this.setY(obj.getY()); this.uuid = uuid; } public $Ponto($Ponto obj){ this.setIdentifier(obj.getIdentifier()); this.setX(obj.getX()); this.setY(obj.getY()); this.uuid = obj.getUuid();; } public $Ponto(Uuid uuid){ this.uuid = uuid; } @Override public boolean isEqual($Ponto obj) {  return (((this.getIdentifier() == null) && (obj.getIdentifier() == null)) || ((this.getIdentifier() != null) && (obj.getIdentifier() != null) && (this.getIdentifier().equals( obj.getIdentifier())))) && (this.getX() == obj.getX()) && (this.getY() == obj.getY()); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Ponto> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Ponto.find(this); if(uuidInject == null){ $Ponto.entityStructure.add(this); UniqueOnePonto.uniqueOnePontoStructure.add(new UniqueOnePonto(this, this.getUuid())); RectangleOnePonto.rectangleOnePontoStructure.add(new RectangleOnePonto(this, this.getUuid())); PointOnePonto.pointOnePontoStructure.add(new PointOnePonto(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Ponto.find(this); if(uuidReject != null){ UniqueOnePonto.uniqueOnePontoStructure.remove(new UniqueOnePonto(this, this.getUuid())); RectangleOnePonto.rectangleOnePontoStructure.remove(new RectangleOnePonto(this, this.getUuid())); PointOnePonto.pointOnePontoStructure.remove(new PointOnePonto(this, this.getUuid())); $Ponto.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Ponto.find(this); $Ponto entityOld = $Ponto.entityStructure.find(uuidOld); if(entityOld != null){ UniqueOnePonto uniqueOnePontoOld = new UniqueOnePonto(entityOld, entityOld.getUuid()); UniqueOnePonto uniqueOnePontoNew = new UniqueOnePonto(this, entityOld.getUuid()); if(uniqueOnePontoOld.hasSameKey(uniqueOnePontoNew)){ $Ponto.uniqueOnePontoStructure.remove(uniqueOnePontoOld); $Ponto.uniqueOnePontoStructure.add(uniqueOnePontoNew); } RectangleOnePonto rectangleOnePontoOld = new RectangleOnePonto(entityOld, entityOld.getUuid()); RectangleOnePonto rectangleOnePontoNew = new RectangleOnePonto(this, entityOld.getUuid()); if(rectangleOnePontoOld.hasSameKey(rectangleOnePontoNew)){ $Ponto.rectangleOnePontoStructure.remove(rectangleOnePontoOld); $Ponto.rectangleOnePontoStructure.add(rectangleOnePontoNew); } PointOnePonto pointOnePontoOld = new PointOnePonto(entityOld, entityOld.getUuid()); PointOnePonto pointOnePontoNew = new PointOnePonto(this, entityOld.getUuid()); if(pointOnePontoOld.hasSameKey(pointOnePontoNew)){ $Ponto.pointOnePontoStructure.remove(pointOnePontoOld); $Ponto.pointOnePontoStructure.add(pointOnePontoNew); } this.uuid = uuidOld; $Ponto.entityStructure.remove(entityOld); $Ponto.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Ponto entity) { UniqueOnePonto unique = new UniqueOnePonto (entity, entity.getUuid()); return $Ponto.uniqueOnePontoStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Ponto.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setIdentifier(pull.pullString()); this.setX(pull.pullInteger()); this.setY(pull.pullInteger()); return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Ponto.classId); push.pushUuid(uuid); push.pushString(this.getIdentifier()); push.pushInteger(this.getX()); push.pushInteger(this.getY()); } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfString(this.getIdentifier()) + Page.sizeOfInteger + Page.sizeOfInteger; } static{ identifier.getSchemas().add( new Schema<$Ponto, UniqueOnePonto, java.lang.String>() { @Override public $Ponto newEntity(java.lang.String value) { $Ponto obj = new $Ponto(); obj.setIdentifier(value); return obj; } @Override public UniqueOnePonto newKey(java.lang.String value) { UniqueOnePonto obj = new UniqueOnePonto(); obj.setIdentifier(value); return obj; } @Override public EntityStructure<$Ponto> getEntityStructure() { return $Ponto.entityStructure; } @Override public KeyStructure<UniqueOnePonto> getKeyStructure() { return UniqueOnePonto.uniqueOnePontoStructure; } } ); x.getSchemas().add( new Schema<$Ponto, RectangleOnePonto, Integer>() { @Override public $Ponto newEntity(Integer value) { $Ponto obj = new $Ponto(); obj.setX(value); return obj; } @Override public RectangleOnePonto newKey(Integer value) { RectangleOnePonto obj = new RectangleOnePonto(); obj.setX(value); return obj; } @Override public EntityStructure<$Ponto> getEntityStructure() { return $Ponto.entityStructure; } @Override public KeyStructure<RectangleOnePonto> getKeyStructure() { return RectangleOnePonto.rectangleOnePontoStructure; } } ); x.getSchemas().add( new Schema<$Ponto, PointOnePonto, Integer>() { @Override public $Ponto newEntity(Integer value) { $Ponto obj = new $Ponto(); obj.setX(value); return obj; } @Override public PointOnePonto newKey(Integer value) { PointOnePonto obj = new PointOnePonto(); obj.setX(value); return obj; } @Override public EntityStructure<$Ponto> getEntityStructure() { return $Ponto.entityStructure; } @Override public KeyStructure<PointOnePonto> getKeyStructure() { return PointOnePonto.pointOnePontoStructure; } } ); y.getSchemas().add( new Schema<$Ponto, RectangleOnePonto, Integer>() { @Override public $Ponto newEntity(Integer value) { $Ponto obj = new $Ponto(); obj.setY(value); return obj; } @Override public RectangleOnePonto newKey(Integer value) { RectangleOnePonto obj = new RectangleOnePonto(); obj.setY(value); return obj; } @Override public EntityStructure<$Ponto> getEntityStructure() { return $Ponto.entityStructure; } @Override public KeyStructure<RectangleOnePonto> getKeyStructure() { return RectangleOnePonto.rectangleOnePontoStructure; } } ); y.getSchemas().add( new Schema<$Ponto, PointOnePonto, Integer>() { @Override public $Ponto newEntity(Integer value) { $Ponto obj = new $Ponto(); obj.setY(value); return obj; } @Override public PointOnePonto newKey(Integer value) { PointOnePonto obj = new PointOnePonto(); obj.setY(value); return obj; } @Override public EntityStructure<$Ponto> getEntityStructure() { return $Ponto.entityStructure; } @Override public KeyStructure<PointOnePonto> getKeyStructure() { return PointOnePonto.pointOnePontoStructure; } } ); } } 