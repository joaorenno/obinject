package org.obinject.sample.image; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.meta.generator.DistanceUtil; import org.obinject.meta.Edition; import org.obinject.meta.Uuid; import org.obinject.storage.KeyStructure; public class EditionOneExam extends $Exam implements Edition<EditionOneExam> { private double preservedDistance; private static Uuid classId; public static Uuid getClassId(){ if (EditionOneExam.classId == null) {EditionOneExam.classId = Uuid.fromString("0DC5BE08-06DE-ED5C-EF69-B815685809FF"); }return EditionOneExam.classId; } public EditionOneExam(){} public EditionOneExam($Exam obj){ super(obj); } public EditionOneExam(Exam obj, Uuid uuid){ super(obj, uuid); } public EditionOneExam(Uuid uuid){ super(uuid); } @Override public boolean hasSameKey(EditionOneExam obj) {  return (((this.getName() == null) && (obj.getName() == null)) || ((this.getName() != null) && (obj.getName() != null) && (this.getName().equals( obj.getName())))); } @Override public double getPreservedDistance() { return this.preservedDistance; } @Override public String getString(){ return "" + getName();} @Override public double distanceTo(EditionOneExam obj){ return DistanceUtil.levenshtein(this.getString(), obj.getString()); } @Override public KeyStructure<EditionOneExam> getKeyStructure() { return editionOneExamStructure; } @Override public boolean pullKey(byte[] array, int position) { PullPage pull = new PullPage(array, position); this.setName(pull.pullString()); return true; } @Override public void pushKey(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushString(this.getName()); } @Override public void setPreservedDistance(double distance) { this.preservedDistance = distance; } @Override public int sizeOfKey() { return  + Page.sizeOfString(this.getName()); } } 