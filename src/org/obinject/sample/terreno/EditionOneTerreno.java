package org.obinject.sample.terreno; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.meta.generator.DistanceUtil; import org.obinject.meta.Edition; import org.obinject.meta.Uuid; import org.obinject.storage.KeyStructure; public class EditionOneTerreno extends $Terreno implements Edition<EditionOneTerreno> { private double preservedDistance; private static Uuid classId; public static Uuid getClassId(){ if (EditionOneTerreno.classId == null) {EditionOneTerreno.classId = Uuid.fromString("11B3EA93-8106-7F0E-AD10-69D1F4749D78"); }return EditionOneTerreno.classId; } public EditionOneTerreno(){} public EditionOneTerreno($Terreno obj){ super(obj); } public EditionOneTerreno(Terreno obj, Uuid uuid){ super(obj, uuid); } public EditionOneTerreno(Uuid uuid){ super(uuid); } @Override public boolean hasSameKey(EditionOneTerreno obj) {  return (((this.getProprietario() == null) && (obj.getProprietario() == null)) || ((this.getProprietario() != null) && (obj.getProprietario() != null) && (this.getProprietario().equals( obj.getProprietario())))); } @Override public double getPreservedDistance() { return this.preservedDistance; } @Override public String getString(){ return "" + getProprietario();} @Override public double distanceTo(EditionOneTerreno obj){ return DistanceUtil.levenshtein(this.getString(), obj.getString()); } @Override public KeyStructure<EditionOneTerreno> getKeyStructure() { return editionOneTerrenoStructure; } @Override public boolean pullKey(byte[] array, int position) { PullPage pull = new PullPage(array, position); this.setProprietario(pull.pullString()); return true; } @Override public void pushKey(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushString(this.getProprietario()); } @Override public void setPreservedDistance(double distance) { this.preservedDistance = distance; } @Override public int sizeOfKey() { return  + Page.sizeOfString(this.getProprietario()); } } 