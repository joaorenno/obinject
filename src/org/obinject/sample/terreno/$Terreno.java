package org.obinject.sample.terreno; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; import org.obinject.storage.MTree; import org.obinject.storage.RTree; public class $Terreno extends Terreno implements Entity<$Terreno> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Terreno.classId == null) {$Terreno.classId = Uuid.fromString("7020A593-B880-ED82-BF5B-80390019433A"); }return $Terreno.classId; } public static final BTreeEntity<$Terreno> entityStructure = new BTreeEntity<$Terreno>(new File("build/classes/org/obinject/sample/terreno/terreno.dbo", 4096)){}; public static final BTree<SortOneTerreno> sortOneTerrenoStructure = new BTree<SortOneTerreno>(new File("build/classes/org/obinject/sample/terreno/terreno.dbo", 4096)){}; public static final BTree<UniqueOneTerreno> uniqueOneTerrenoStructure = new BTree<UniqueOneTerreno>(new File("build/classes/org/obinject/sample/terreno/terreno.dbo", 4096)){}; public static final RTree<RectangleOneTerreno> rectangleOneTerrenoStructure = new RTree<RectangleOneTerreno>(new File("build/classes/org/obinject/sample/terreno/terreno.dbo", 4096)){}; public static final MTree<EditionOneTerreno> editionOneTerrenoStructure = new MTree<EditionOneTerreno>(new File("build/classes/org/obinject/sample/terreno/terreno.dbo", 4096)){}; public static final MTree<PointOneTerreno> pointOneTerrenoStructure = new MTree<PointOneTerreno>(new File("build/classes/org/obinject/sample/terreno/terreno.dbo", 4096)){}; public static final Attribute<Long> registro = new Attribute<Long> (){ @Override public Long valueOfAttribute(Entity entity) { return ((Terreno)entity).getRegistro(); } }; public static final Attribute<java.lang.String> proprietario = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Terreno)entity).getProprietario(); } }; public static final Attribute<java.lang.String> cidade = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Terreno)entity).getCidade(); } }; public static final Attribute<java.lang.String> bairro = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Terreno)entity).getBairro(); } }; public static final Attribute<java.lang.String> logradouro = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Terreno)entity).getLogradouro(); } }; public static final Attribute<Float> valorImovel = new Attribute<Float> (){ @Override public Float valueOfAttribute(Entity entity) { return ((Terreno)entity).getValorImovel(); } }; public static final Attribute<Integer> numero = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Terreno)entity).getNumero(); } }; public static final Attribute<float[]> coordenadaOrigem = new Attribute<float[]> (){ @Override public float[] valueOfAttribute(Entity entity) { return ((Terreno)entity).getCoordenadaOrigem(); } }; public static final Attribute<float[]> coordenadaExtensao = new Attribute<float[]> (){ @Override public float[] valueOfAttribute(Entity entity) { return ((Terreno)entity).getCoordenadaExtensao(); } }; public static final Attribute<org.obinject.sample.terreno.Mapa> mapa = new Attribute<org.obinject.sample.terreno.Mapa> (){ @Override public org.obinject.sample.terreno.Mapa valueOfAttribute(Entity entity) { return ((Terreno)entity).getMapa(); } }; public $Terreno(){ this.uuid = Uuid.generator(); } public $Terreno(Terreno obj){ this.setRegistro(obj.getRegistro()); this.setProprietario(obj.getProprietario()); this.setCidade(obj.getCidade()); this.setBairro(obj.getBairro()); this.setLogradouro(obj.getLogradouro()); this.setValorImovel(obj.getValorImovel()); this.setNumero(obj.getNumero()); this.setCoordenadaOrigem(obj.getCoordenadaOrigem()); this.setCoordenadaExtensao(obj.getCoordenadaExtensao()); this.setMapa(obj.getMapa()); this.uuid = Uuid.generator(); } public $Terreno(Terreno obj, Uuid uuid){ this.setRegistro(obj.getRegistro()); this.setProprietario(obj.getProprietario()); this.setCidade(obj.getCidade()); this.setBairro(obj.getBairro()); this.setLogradouro(obj.getLogradouro()); this.setValorImovel(obj.getValorImovel()); this.setNumero(obj.getNumero()); this.setCoordenadaOrigem(obj.getCoordenadaOrigem()); this.setCoordenadaExtensao(obj.getCoordenadaExtensao()); this.setMapa(obj.getMapa()); this.uuid = uuid; } public $Terreno($Terreno obj){ this.setRegistro(obj.getRegistro()); this.setProprietario(obj.getProprietario()); this.setCidade(obj.getCidade()); this.setBairro(obj.getBairro()); this.setLogradouro(obj.getLogradouro()); this.setValorImovel(obj.getValorImovel()); this.setNumero(obj.getNumero()); this.setCoordenadaOrigem(obj.getCoordenadaOrigem()); this.setCoordenadaExtensao(obj.getCoordenadaExtensao()); this.setMapa(obj.getMapa()); this.uuid = obj.getUuid();; } public $Terreno(Uuid uuid){ this.uuid = uuid; } protected Uuid uuidMapa; @Override public Mapa getMapa(){ Mapa superMapa = super.getMapa(); if (superMapa == null && uuidMapa != null) {superMapa = $Mapa.entityStructure.find(uuidMapa); this.setMapa(superMapa); }return superMapa; }private void resetUuidMapa() { if (this.getMapa() != null) { if (this.getMapa() instanceof Entity) { uuidMapa = ((Entity) this.getMapa()).getUuid(); } else { $Mapa entity = new $Mapa (this.getMapa()); uuidMapa = $Mapa.find(entity); if (uuidMapa == null) { throw new TransientObjectException("Terreno", "mapa", "Mapa"); } } } }@Override public boolean isEqual($Terreno obj) { return (this.getRegistro() == obj.getRegistro()) && (((this.getProprietario() == null) && (obj.getProprietario() == null)) || ((this.getProprietario() != null) && (obj.getProprietario() != null) && (this.getProprietario().equals( obj.getProprietario())))) && (((this.getCidade() == null) && (obj.getCidade() == null)) || ((this.getCidade() != null) && (obj.getCidade() != null) && (this.getCidade().equals( obj.getCidade())))) && (((this.getBairro() == null) && (obj.getBairro() == null)) || ((this.getBairro() != null) && (obj.getBairro() != null) && (this.getBairro().equals( obj.getBairro())))) && (((this.getLogradouro() == null) && (obj.getLogradouro() == null)) || ((this.getLogradouro() != null) && (obj.getLogradouro() != null) && (this.getLogradouro().equals( obj.getLogradouro())))) && (this.getValorImovel() == obj.getValorImovel()) && (this.getNumero() == obj.getNumero()); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Terreno> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Terreno.find(this); if(uuidInject == null){ resetUuidMapa(); $Terreno.entityStructure.add(this); SortOneTerreno.sortOneTerrenoStructure.add(new SortOneTerreno(this, this.getUuid())); UniqueOneTerreno.uniqueOneTerrenoStructure.add(new UniqueOneTerreno(this, this.getUuid())); RectangleOneTerreno.rectangleOneTerrenoStructure.add(new RectangleOneTerreno(this, this.getUuid())); EditionOneTerreno.editionOneTerrenoStructure.add(new EditionOneTerreno(this, this.getUuid())); PointOneTerreno.pointOneTerrenoStructure.add(new PointOneTerreno(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Terreno.find(this); if(uuidReject != null){ SortOneTerreno.sortOneTerrenoStructure.remove(new SortOneTerreno(this, this.getUuid())); UniqueOneTerreno.uniqueOneTerrenoStructure.remove(new UniqueOneTerreno(this, this.getUuid())); RectangleOneTerreno.rectangleOneTerrenoStructure.remove(new RectangleOneTerreno(this, this.getUuid())); EditionOneTerreno.editionOneTerrenoStructure.remove(new EditionOneTerreno(this, this.getUuid())); PointOneTerreno.pointOneTerrenoStructure.remove(new PointOneTerreno(this, this.getUuid())); $Terreno.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Terreno.find(this); $Terreno entityOld = $Terreno.entityStructure.find(uuidOld); if(entityOld != null){ resetUuidMapa(); SortOneTerreno sortOneTerrenoOld = new SortOneTerreno(entityOld, entityOld.getUuid()); SortOneTerreno sortOneTerrenoNew = new SortOneTerreno(this, entityOld.getUuid()); if(sortOneTerrenoOld.hasSameKey(sortOneTerrenoNew)){ $Terreno.sortOneTerrenoStructure.remove(sortOneTerrenoOld); $Terreno.sortOneTerrenoStructure.add(sortOneTerrenoNew); } UniqueOneTerreno uniqueOneTerrenoOld = new UniqueOneTerreno(entityOld, entityOld.getUuid()); UniqueOneTerreno uniqueOneTerrenoNew = new UniqueOneTerreno(this, entityOld.getUuid()); if(uniqueOneTerrenoOld.hasSameKey(uniqueOneTerrenoNew)){ $Terreno.uniqueOneTerrenoStructure.remove(uniqueOneTerrenoOld); $Terreno.uniqueOneTerrenoStructure.add(uniqueOneTerrenoNew); } RectangleOneTerreno rectangleOneTerrenoOld = new RectangleOneTerreno(entityOld, entityOld.getUuid()); RectangleOneTerreno rectangleOneTerrenoNew = new RectangleOneTerreno(this, entityOld.getUuid()); if(rectangleOneTerrenoOld.hasSameKey(rectangleOneTerrenoNew)){ $Terreno.rectangleOneTerrenoStructure.remove(rectangleOneTerrenoOld); $Terreno.rectangleOneTerrenoStructure.add(rectangleOneTerrenoNew); } EditionOneTerreno editionOneTerrenoOld = new EditionOneTerreno(entityOld, entityOld.getUuid()); EditionOneTerreno editionOneTerrenoNew = new EditionOneTerreno(this, entityOld.getUuid()); if(editionOneTerrenoOld.hasSameKey(editionOneTerrenoNew)){ $Terreno.editionOneTerrenoStructure.remove(editionOneTerrenoOld); $Terreno.editionOneTerrenoStructure.add(editionOneTerrenoNew); } PointOneTerreno pointOneTerrenoOld = new PointOneTerreno(entityOld, entityOld.getUuid()); PointOneTerreno pointOneTerrenoNew = new PointOneTerreno(this, entityOld.getUuid()); if(pointOneTerrenoOld.hasSameKey(pointOneTerrenoNew)){ $Terreno.pointOneTerrenoStructure.remove(pointOneTerrenoOld); $Terreno.pointOneTerrenoStructure.add(pointOneTerrenoNew); } this.uuid = uuidOld; $Terreno.entityStructure.remove(entityOld); $Terreno.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Terreno entity) { UniqueOneTerreno unique = new UniqueOneTerreno (entity, entity.getUuid()); return $Terreno.uniqueOneTerrenoStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Terreno.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setRegistro(pull.pullLong()); this.setProprietario(pull.pullString()); this.setCidade(pull.pullString()); this.setBairro(pull.pullString()); this.setLogradouro(pull.pullString()); this.setValorImovel(pull.pullFloat()); this.setNumero(pull.pullInteger()); this.setCoordenadaOrigem((float[]) pull.pullMatrix()); this.setCoordenadaExtensao((float[]) pull.pullMatrix()); int totalMapa = pull.pullInteger(); if(totalMapa > 0){this.uuidMapa = pull.pullUuid(); }return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Terreno.classId); push.pushUuid(uuid); push.pushLong(this.getRegistro()); push.pushString(this.getProprietario()); push.pushString(this.getCidade()); push.pushString(this.getBairro()); push.pushString(this.getLogradouro()); push.pushFloat(this.getValorImovel()); push.pushInteger(this.getNumero()); push.pushMatrix(getCoordenadaOrigem()); push.pushMatrix(getCoordenadaExtensao()); if (this.uuidMapa != null) { push.pushInteger(1); push.pushUuid(this.uuidMapa); } else {push.pushInteger(0); } } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfLong + Page.sizeOfString(this.getProprietario()) + Page.sizeOfString(this.getCidade()) + Page.sizeOfString(this.getBairro()) + Page.sizeOfString(this.getLogradouro()) + Page.sizeOfFloat + Page.sizeOfInteger + Page.sizeOfMatrix(this.getCoordenadaOrigem()) + Page.sizeOfMatrix(this.getCoordenadaExtensao()) + Page.sizeOfEntity(this.uuidMapa); } static{ registro.getSchemas().add( new Schema<$Terreno, UniqueOneTerreno, Long>() { @Override public $Terreno newEntity(Long value) { $Terreno obj = new $Terreno(); obj.setRegistro(value); return obj; } @Override public UniqueOneTerreno newKey(Long value) { UniqueOneTerreno obj = new UniqueOneTerreno(); obj.setRegistro(value); return obj; } @Override public EntityStructure<$Terreno> getEntityStructure() { return $Terreno.entityStructure; } @Override public KeyStructure<UniqueOneTerreno> getKeyStructure() { return UniqueOneTerreno.uniqueOneTerrenoStructure; } } ); proprietario.getSchemas().add( new Schema<$Terreno, SortOneTerreno, java.lang.String>() { @Override public $Terreno newEntity(java.lang.String value) { $Terreno obj = new $Terreno(); obj.setProprietario(value); return obj; } @Override public SortOneTerreno newKey(java.lang.String value) { SortOneTerreno obj = new SortOneTerreno(); obj.setProprietario(value); return obj; } @Override public EntityStructure<$Terreno> getEntityStructure() { return $Terreno.entityStructure; } @Override public KeyStructure<SortOneTerreno> getKeyStructure() { return SortOneTerreno.sortOneTerrenoStructure; } } ); proprietario.getSchemas().add( new Schema<$Terreno, EditionOneTerreno, java.lang.String>() { @Override public $Terreno newEntity(java.lang.String value) { $Terreno obj = new $Terreno(); obj.setProprietario(value); return obj; } @Override public EditionOneTerreno newKey(java.lang.String value) { EditionOneTerreno obj = new EditionOneTerreno(); obj.setProprietario(value); return obj; } @Override public EntityStructure<$Terreno> getEntityStructure() { return $Terreno.entityStructure; } @Override public KeyStructure<EditionOneTerreno> getKeyStructure() { return EditionOneTerreno.editionOneTerrenoStructure; } } ); coordenadaOrigem.getSchemas().add( new Schema<$Terreno, RectangleOneTerreno, float[]>() { @Override public $Terreno newEntity(float[] value) { $Terreno obj = new $Terreno(); obj.setCoordenadaOrigem(value); return obj; } @Override public RectangleOneTerreno newKey(float[] value) { RectangleOneTerreno obj = new RectangleOneTerreno(); obj.setCoordenadaOrigem(value); return obj; } @Override public EntityStructure<$Terreno> getEntityStructure() { return $Terreno.entityStructure; } @Override public KeyStructure<RectangleOneTerreno> getKeyStructure() { return RectangleOneTerreno.rectangleOneTerrenoStructure; } } ); coordenadaOrigem.getSchemas().add( new Schema<$Terreno, PointOneTerreno, float[]>() { @Override public $Terreno newEntity(float[] value) { $Terreno obj = new $Terreno(); obj.setCoordenadaOrigem(value); return obj; } @Override public PointOneTerreno newKey(float[] value) { PointOneTerreno obj = new PointOneTerreno(); obj.setCoordenadaOrigem(value); return obj; } @Override public EntityStructure<$Terreno> getEntityStructure() { return $Terreno.entityStructure; } @Override public KeyStructure<PointOneTerreno> getKeyStructure() { return PointOneTerreno.pointOneTerrenoStructure; } } ); coordenadaExtensao.getSchemas().add( new Schema<$Terreno, RectangleOneTerreno, float[]>() { @Override public $Terreno newEntity(float[] value) { $Terreno obj = new $Terreno(); obj.setCoordenadaExtensao(value); return obj; } @Override public RectangleOneTerreno newKey(float[] value) { RectangleOneTerreno obj = new RectangleOneTerreno(); obj.setCoordenadaExtensao(value); return obj; } @Override public EntityStructure<$Terreno> getEntityStructure() { return $Terreno.entityStructure; } @Override public KeyStructure<RectangleOneTerreno> getKeyStructure() { return RectangleOneTerreno.rectangleOneTerrenoStructure; } } ); } } 