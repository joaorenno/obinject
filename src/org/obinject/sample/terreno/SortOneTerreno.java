package org.obinject.sample.terreno; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.meta.Sort; import org.obinject.meta.Uuid; import org.obinject.storage.KeyStructure; public class SortOneTerreno extends $Terreno implements Sort<SortOneTerreno>, Comparable<SortOneTerreno> { private static Uuid classId; public static Uuid getClassId(){ if (SortOneTerreno.classId == null) {SortOneTerreno.classId = Uuid.fromString("13BEFF18-4F93-77FE-4753-D9A14199FE96"); }return SortOneTerreno.classId; } public SortOneTerreno(){} public SortOneTerreno($Terreno obj){ super(obj); } public SortOneTerreno(Terreno obj, Uuid uuid){ super(obj, uuid); } public SortOneTerreno(Uuid uuid){ super(uuid); } @Override public boolean hasSameKey(SortOneTerreno obj) {  return (((this.getProprietario() == null) && (obj.getProprietario() == null)) || ((this.getProprietario() != null) && (obj.getProprietario() != null) && (this.getProprietario().equals( obj.getProprietario())))); } @Override public int compareTo(SortOneTerreno obj) { if (((this.getProprietario() == null) || (this.getProprietario() != null) && (obj.getProprietario() != null) && (this.getProprietario().compareTo( obj.getProprietario()) < 0))) { return -1; } else if (((this.getProprietario() == null) || (this.getProprietario() != null) && (obj.getProprietario() != null) && (this.getProprietario().compareTo( obj.getProprietario()) == 0))) { return 0; } else {return 1; } }@Override public KeyStructure<SortOneTerreno> getKeyStructure() { return sortOneTerrenoStructure; } @Override public boolean pullKey(byte[] array, int position) { PullPage pull = new PullPage(array, position); this.setProprietario(pull.pullString()); return true; } @Override public void pushKey(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushString(this.getProprietario()); } @Override public int sizeOfKey() { return  + Page.sizeOfString(this.getProprietario()); } } 