package org.obinject.sample.meu; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.meta.Sort; import org.obinject.meta.Uuid; import org.obinject.storage.KeyStructure; public class SortOneMeuExemplo extends $MeuExemplo implements Sort<SortOneMeuExemplo>, Comparable<SortOneMeuExemplo> { private static Uuid classId; public static Uuid getClassId(){ if (SortOneMeuExemplo.classId == null) {SortOneMeuExemplo.classId = Uuid.fromString("F66D7BD0-0441-1AE0-0796-C3BF955368CA"); }return SortOneMeuExemplo.classId; } public SortOneMeuExemplo(){} public SortOneMeuExemplo($MeuExemplo obj){ super(obj); } public SortOneMeuExemplo(MeuExemplo obj, Uuid uuid){ super(obj, uuid); } public SortOneMeuExemplo(Uuid uuid){ super(uuid); } @Override public boolean hasSameKey(SortOneMeuExemplo obj) { return (this.getCampo3() == obj.getCampo3()) && (((this.getCampo12() == null) && (obj.getCampo12() == null)) || ((this.getCampo12() != null) && (obj.getCampo12() != null) && (this.getCampo12().equals( obj.getCampo12())))); } @Override public int compareTo(SortOneMeuExemplo obj) { if ((this.getCampo3() < obj.getCampo3()) && ((this.getCampo12() == null) || (this.getCampo12() != null) && (obj.getCampo12() != null) && (this.getCampo12().compareTo( obj.getCampo12()) < 0))) { return -1; } else if ((this.getCampo3() == obj.getCampo3()) && ((this.getCampo12() == null) || (this.getCampo12() != null) && (obj.getCampo12() != null) && (this.getCampo12().compareTo( obj.getCampo12()) == 0))) { return 0; } else {return 1; } }@Override public KeyStructure<SortOneMeuExemplo> getKeyStructure() { return sortOneMeuExemploStructure; } @Override public boolean pullKey(byte[] array, int position) { PullPage pull = new PullPage(array, position); this.setCampo3(pull.pullCharacter()); this.setCampo12(pull.pullString()); return true; } @Override public void pushKey(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushCharacter(this.getCampo3()); push.pushString(this.getCampo12()); } @Override public int sizeOfKey() { return  + Page.sizeOfCharacter + Page.sizeOfString(this.getCampo12()); } } 