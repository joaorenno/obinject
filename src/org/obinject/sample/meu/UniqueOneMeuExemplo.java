package org.obinject.sample.meu; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.meta.Sort; import org.obinject.meta.Uuid; import org.obinject.storage.KeyStructure; public class UniqueOneMeuExemplo extends $MeuExemplo implements Sort<UniqueOneMeuExemplo>, Comparable<UniqueOneMeuExemplo> { private static Uuid classId; public static Uuid getClassId(){ if (UniqueOneMeuExemplo.classId == null) {UniqueOneMeuExemplo.classId = Uuid.fromString("6AFED434-6F67-A7E7-377D-B8B7F35F215F"); }return UniqueOneMeuExemplo.classId; } public UniqueOneMeuExemplo(){} public UniqueOneMeuExemplo($MeuExemplo obj){ super(obj); } public UniqueOneMeuExemplo(MeuExemplo obj, Uuid uuid){ super(obj, uuid); } public UniqueOneMeuExemplo(Uuid uuid){ super(uuid); } @Override public boolean hasSameKey(UniqueOneMeuExemplo obj) { return (this.getCampo7() == obj.getCampo7()) && (this.getCampo8() == obj.getCampo8()); } @Override public int compareTo(UniqueOneMeuExemplo obj) { if ((this.getCampo7() < obj.getCampo7()) && (this.getCampo8() < obj.getCampo8())) { return -1; } else if ((this.getCampo7() == obj.getCampo7()) && (this.getCampo8() == obj.getCampo8())) { return 0; } else {return 1; } } @Override public KeyStructure<UniqueOneMeuExemplo> getKeyStructure() { return uniqueOneMeuExemploStructure; } @Override public boolean pullKey(byte[] array, int position) { PullPage pull = new PullPage(array, position); this.setCampo7(pull.pullFloat()); this.setCampo8(pull.pullInteger()); return true; } @Override public void pushKey(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushFloat(this.getCampo7()); push.pushInteger(this.getCampo8()); } @Override public int sizeOfKey() { return  + Page.sizeOfFloat + Page.sizeOfInteger; } } 