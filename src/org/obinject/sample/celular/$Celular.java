package org.obinject.sample.celular; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; import org.obinject.storage.MTree; public class $Celular extends Celular implements Entity<$Celular> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Celular.classId == null) {$Celular.classId = Uuid.fromString("70F67F84-8644-5D43-BF58-2BF74BD5628E"); }return $Celular.classId; } public static final BTreeEntity<$Celular> entityStructure = new BTreeEntity<$Celular>(new File("build/classes/org/obinject/sample/celular/celular.dbo", 4096)){}; public static final BTree<SortOneCelular> sortOneCelularStructure = new BTree<SortOneCelular>(new File("build/classes/org/obinject/sample/celular/celular.dbo", 4096)){}; public static final BTree<UniqueOneCelular> uniqueOneCelularStructure = new BTree<UniqueOneCelular>(new File("build/classes/org/obinject/sample/celular/celular.dbo", 4096)){}; public static final MTree<EditionOneCelular> editionOneCelularStructure = new MTree<EditionOneCelular>(new File("build/classes/org/obinject/sample/celular/celular.dbo", 4096)){}; public static final MTree<PointOneCelular> pointOneCelularStructure = new MTree<PointOneCelular>(new File("build/classes/org/obinject/sample/celular/celular.dbo", 4096)){}; public static final Attribute<Long> numero = new Attribute<Long> (){ @Override public Long valueOfAttribute(Entity entity) { return ((Celular)entity).getNumero(); } }; public static final Attribute<Short> ddd = new Attribute<Short> (){ @Override public Short valueOfAttribute(Entity entity) { return ((Celular)entity).getDdd(); } }; public static final Attribute<Double> latitude = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((Celular)entity).getLatitude(); } }; public static final Attribute<Double> longitude = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((Celular)entity).getLongitude(); } }; public static final Attribute<java.lang.String> dono = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Celular)entity).getDono(); } }; public $Celular(){ this.uuid = Uuid.generator(); } public $Celular(Celular obj){ this.setNumero(obj.getNumero()); this.setDdd(obj.getDdd()); this.setLatitude(obj.getLatitude()); this.setLongitude(obj.getLongitude()); this.setDono(obj.getDono()); this.uuid = Uuid.generator(); } public $Celular(Celular obj, Uuid uuid){ this.setNumero(obj.getNumero()); this.setDdd(obj.getDdd()); this.setLatitude(obj.getLatitude()); this.setLongitude(obj.getLongitude()); this.setDono(obj.getDono()); this.uuid = uuid; } public $Celular($Celular obj){ this.setNumero(obj.getNumero()); this.setDdd(obj.getDdd()); this.setLatitude(obj.getLatitude()); this.setLongitude(obj.getLongitude()); this.setDono(obj.getDono()); this.uuid = obj.getUuid();; } public $Celular(Uuid uuid){ this.uuid = uuid; } @Override public boolean isEqual($Celular obj) { return (this.getNumero() == obj.getNumero()) && (this.getDdd() == obj.getDdd()) && (this.getLatitude() == obj.getLatitude()) && (this.getLongitude() == obj.getLongitude()) && (((this.getDono() == null) && (obj.getDono() == null)) || ((this.getDono() != null) && (obj.getDono() != null) && (this.getDono().equals( obj.getDono())))); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Celular> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Celular.find(this); if(uuidInject == null){ $Celular.entityStructure.add(this); SortOneCelular.sortOneCelularStructure.add(new SortOneCelular(this, this.getUuid())); UniqueOneCelular.uniqueOneCelularStructure.add(new UniqueOneCelular(this, this.getUuid())); EditionOneCelular.editionOneCelularStructure.add(new EditionOneCelular(this, this.getUuid())); PointOneCelular.pointOneCelularStructure.add(new PointOneCelular(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Celular.find(this); if(uuidReject != null){ SortOneCelular.sortOneCelularStructure.remove(new SortOneCelular(this, this.getUuid())); UniqueOneCelular.uniqueOneCelularStructure.remove(new UniqueOneCelular(this, this.getUuid())); EditionOneCelular.editionOneCelularStructure.remove(new EditionOneCelular(this, this.getUuid())); PointOneCelular.pointOneCelularStructure.remove(new PointOneCelular(this, this.getUuid())); $Celular.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Celular.find(this); $Celular entityOld = $Celular.entityStructure.find(uuidOld); if(entityOld != null){ SortOneCelular sortOneCelularOld = new SortOneCelular(entityOld, entityOld.getUuid()); SortOneCelular sortOneCelularNew = new SortOneCelular(this, entityOld.getUuid()); if(sortOneCelularOld.hasSameKey(sortOneCelularNew)){ $Celular.sortOneCelularStructure.remove(sortOneCelularOld); $Celular.sortOneCelularStructure.add(sortOneCelularNew); } UniqueOneCelular uniqueOneCelularOld = new UniqueOneCelular(entityOld, entityOld.getUuid()); UniqueOneCelular uniqueOneCelularNew = new UniqueOneCelular(this, entityOld.getUuid()); if(uniqueOneCelularOld.hasSameKey(uniqueOneCelularNew)){ $Celular.uniqueOneCelularStructure.remove(uniqueOneCelularOld); $Celular.uniqueOneCelularStructure.add(uniqueOneCelularNew); } EditionOneCelular editionOneCelularOld = new EditionOneCelular(entityOld, entityOld.getUuid()); EditionOneCelular editionOneCelularNew = new EditionOneCelular(this, entityOld.getUuid()); if(editionOneCelularOld.hasSameKey(editionOneCelularNew)){ $Celular.editionOneCelularStructure.remove(editionOneCelularOld); $Celular.editionOneCelularStructure.add(editionOneCelularNew); } PointOneCelular pointOneCelularOld = new PointOneCelular(entityOld, entityOld.getUuid()); PointOneCelular pointOneCelularNew = new PointOneCelular(this, entityOld.getUuid()); if(pointOneCelularOld.hasSameKey(pointOneCelularNew)){ $Celular.pointOneCelularStructure.remove(pointOneCelularOld); $Celular.pointOneCelularStructure.add(pointOneCelularNew); } this.uuid = uuidOld; $Celular.entityStructure.remove(entityOld); $Celular.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Celular entity) { UniqueOneCelular unique = new UniqueOneCelular (entity, entity.getUuid()); return $Celular.uniqueOneCelularStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Celular.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setNumero(pull.pullLong()); this.setDdd(pull.pullShort()); this.setLatitude(pull.pullDouble()); this.setLongitude(pull.pullDouble()); this.setDono(pull.pullString()); return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Celular.classId); push.pushUuid(uuid); push.pushLong(this.getNumero()); push.pushShort(this.getDdd()); push.pushDouble(this.getLatitude()); push.pushDouble(this.getLongitude()); push.pushString(this.getDono()); } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfLong + Page.sizeOfShort + Page.sizeOfDouble + Page.sizeOfDouble + Page.sizeOfString(this.getDono()); } static{ numero.getSchemas().add( new Schema<$Celular, UniqueOneCelular, Long>() { @Override public $Celular newEntity(Long value) { $Celular obj = new $Celular(); obj.setNumero(value); return obj; } @Override public UniqueOneCelular newKey(Long value) { UniqueOneCelular obj = new UniqueOneCelular(); obj.setNumero(value); return obj; } @Override public EntityStructure<$Celular> getEntityStructure() { return $Celular.entityStructure; } @Override public KeyStructure<UniqueOneCelular> getKeyStructure() { return UniqueOneCelular.uniqueOneCelularStructure; } } ); latitude.getSchemas().add( new Schema<$Celular, PointOneCelular, Double>() { @Override public $Celular newEntity(Double value) { $Celular obj = new $Celular(); obj.setLatitude(value); return obj; } @Override public PointOneCelular newKey(Double value) { PointOneCelular obj = new PointOneCelular(); obj.setLatitude(value); return obj; } @Override public EntityStructure<$Celular> getEntityStructure() { return $Celular.entityStructure; } @Override public KeyStructure<PointOneCelular> getKeyStructure() { return PointOneCelular.pointOneCelularStructure; } } ); longitude.getSchemas().add( new Schema<$Celular, PointOneCelular, Double>() { @Override public $Celular newEntity(Double value) { $Celular obj = new $Celular(); obj.setLongitude(value); return obj; } @Override public PointOneCelular newKey(Double value) { PointOneCelular obj = new PointOneCelular(); obj.setLongitude(value); return obj; } @Override public EntityStructure<$Celular> getEntityStructure() { return $Celular.entityStructure; } @Override public KeyStructure<PointOneCelular> getKeyStructure() { return PointOneCelular.pointOneCelularStructure; } } ); dono.getSchemas().add( new Schema<$Celular, SortOneCelular, java.lang.String>() { @Override public $Celular newEntity(java.lang.String value) { $Celular obj = new $Celular(); obj.setDono(value); return obj; } @Override public SortOneCelular newKey(java.lang.String value) { SortOneCelular obj = new SortOneCelular(); obj.setDono(value); return obj; } @Override public EntityStructure<$Celular> getEntityStructure() { return $Celular.entityStructure; } @Override public KeyStructure<SortOneCelular> getKeyStructure() { return SortOneCelular.sortOneCelularStructure; } } ); dono.getSchemas().add( new Schema<$Celular, EditionOneCelular, java.lang.String>() { @Override public $Celular newEntity(java.lang.String value) { $Celular obj = new $Celular(); obj.setDono(value); return obj; } @Override public EditionOneCelular newKey(java.lang.String value) { EditionOneCelular obj = new EditionOneCelular(); obj.setDono(value); return obj; } @Override public EntityStructure<$Celular> getEntityStructure() { return $Celular.entityStructure; } @Override public KeyStructure<EditionOneCelular> getKeyStructure() { return EditionOneCelular.editionOneCelularStructure; } } ); } } 