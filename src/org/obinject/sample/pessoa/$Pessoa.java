package org.obinject.sample.pessoa; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; import org.obinject.storage.MTree; import org.obinject.storage.RTree; public class $Pessoa extends Pessoa implements Entity<$Pessoa> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Pessoa.classId == null) {$Pessoa.classId = Uuid.fromString("10AB1706-9579-5EED-77E3-F7401D2DAC85"); }return $Pessoa.classId; } public static final BTreeEntity<$Pessoa> entityStructure = new BTreeEntity<$Pessoa>(new File("build/classes/org/obinject/sample/pessoa/pessoa.dbo", 4096)){}; public static final BTree<SortOnePessoa> sortOnePessoaStructure = new BTree<SortOnePessoa>(new File("build/classes/org/obinject/sample/pessoa/pessoa.dbo", 4096)){}; public static final BTree<UniqueOnePessoa> uniqueOnePessoaStructure = new BTree<UniqueOnePessoa>(new File("build/classes/org/obinject/sample/pessoa/pessoa.dbo", 4096)){}; public static final RTree<RectangleOnePessoa> rectangleOnePessoaStructure = new RTree<RectangleOnePessoa>(new File("build/classes/org/obinject/sample/pessoa/pessoa.dbo", 4096)){}; public static final MTree<PointOnePessoa> pointOnePessoaStructure = new MTree<PointOnePessoa>(new File("build/classes/org/obinject/sample/pessoa/pessoa.dbo", 4096)){}; public static final Attribute<java.lang.String> cpf = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Pessoa)entity).getCpf(); } }; public static final Attribute<java.lang.String> nome = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Pessoa)entity).getNome(); } }; public static final Attribute<Float> latitude = new Attribute<Float> (){ @Override public Float valueOfAttribute(Entity entity) { return ((Pessoa)entity).getLatitude(); } }; public static final Attribute<Float> longitude = new Attribute<Float> (){ @Override public Float valueOfAttribute(Entity entity) { return ((Pessoa)entity).getLongitude(); } }; public static final Attribute<float[]> caracteristica = new Attribute<float[]> (){ @Override public float[] valueOfAttribute(Entity entity) { return ((Pessoa)entity).getCaracteristica(); } }; public $Pessoa(){ this.uuid = Uuid.generator(); } public $Pessoa(Pessoa obj){ this.setCpf(obj.getCpf()); this.setNome(obj.getNome()); this.setLatitude(obj.getLatitude()); this.setLongitude(obj.getLongitude()); this.setCaracteristica(obj.getCaracteristica()); this.uuid = Uuid.generator(); } public $Pessoa(Pessoa obj, Uuid uuid){ this.setCpf(obj.getCpf()); this.setNome(obj.getNome()); this.setLatitude(obj.getLatitude()); this.setLongitude(obj.getLongitude()); this.setCaracteristica(obj.getCaracteristica()); this.uuid = uuid; } public $Pessoa($Pessoa obj){ this.setCpf(obj.getCpf()); this.setNome(obj.getNome()); this.setLatitude(obj.getLatitude()); this.setLongitude(obj.getLongitude()); this.setCaracteristica(obj.getCaracteristica()); this.uuid = obj.getUuid();; } public $Pessoa(Uuid uuid){ this.uuid = uuid; } @Override public boolean isEqual($Pessoa obj) {  return (((this.getCpf() == null) && (obj.getCpf() == null)) || ((this.getCpf() != null) && (obj.getCpf() != null) && (this.getCpf().equals( obj.getCpf())))) && (((this.getNome() == null) && (obj.getNome() == null)) || ((this.getNome() != null) && (obj.getNome() != null) && (this.getNome().equals( obj.getNome())))) && (this.getLatitude() == obj.getLatitude()) && (this.getLongitude() == obj.getLongitude()); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Pessoa> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Pessoa.find(this); if(uuidInject == null){ $Pessoa.entityStructure.add(this); SortOnePessoa.sortOnePessoaStructure.add(new SortOnePessoa(this, this.getUuid())); UniqueOnePessoa.uniqueOnePessoaStructure.add(new UniqueOnePessoa(this, this.getUuid())); RectangleOnePessoa.rectangleOnePessoaStructure.add(new RectangleOnePessoa(this, this.getUuid())); PointOnePessoa.pointOnePessoaStructure.add(new PointOnePessoa(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Pessoa.find(this); if(uuidReject != null){ SortOnePessoa.sortOnePessoaStructure.remove(new SortOnePessoa(this, this.getUuid())); UniqueOnePessoa.uniqueOnePessoaStructure.remove(new UniqueOnePessoa(this, this.getUuid())); RectangleOnePessoa.rectangleOnePessoaStructure.remove(new RectangleOnePessoa(this, this.getUuid())); PointOnePessoa.pointOnePessoaStructure.remove(new PointOnePessoa(this, this.getUuid())); $Pessoa.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Pessoa.find(this); $Pessoa entityOld = $Pessoa.entityStructure.find(uuidOld); if(entityOld != null){ SortOnePessoa sortOnePessoaOld = new SortOnePessoa(entityOld, entityOld.getUuid()); SortOnePessoa sortOnePessoaNew = new SortOnePessoa(this, entityOld.getUuid()); if(sortOnePessoaOld.hasSameKey(sortOnePessoaNew)){ $Pessoa.sortOnePessoaStructure.remove(sortOnePessoaOld); $Pessoa.sortOnePessoaStructure.add(sortOnePessoaNew); } UniqueOnePessoa uniqueOnePessoaOld = new UniqueOnePessoa(entityOld, entityOld.getUuid()); UniqueOnePessoa uniqueOnePessoaNew = new UniqueOnePessoa(this, entityOld.getUuid()); if(uniqueOnePessoaOld.hasSameKey(uniqueOnePessoaNew)){ $Pessoa.uniqueOnePessoaStructure.remove(uniqueOnePessoaOld); $Pessoa.uniqueOnePessoaStructure.add(uniqueOnePessoaNew); } RectangleOnePessoa rectangleOnePessoaOld = new RectangleOnePessoa(entityOld, entityOld.getUuid()); RectangleOnePessoa rectangleOnePessoaNew = new RectangleOnePessoa(this, entityOld.getUuid()); if(rectangleOnePessoaOld.hasSameKey(rectangleOnePessoaNew)){ $Pessoa.rectangleOnePessoaStructure.remove(rectangleOnePessoaOld); $Pessoa.rectangleOnePessoaStructure.add(rectangleOnePessoaNew); } PointOnePessoa pointOnePessoaOld = new PointOnePessoa(entityOld, entityOld.getUuid()); PointOnePessoa pointOnePessoaNew = new PointOnePessoa(this, entityOld.getUuid()); if(pointOnePessoaOld.hasSameKey(pointOnePessoaNew)){ $Pessoa.pointOnePessoaStructure.remove(pointOnePessoaOld); $Pessoa.pointOnePessoaStructure.add(pointOnePessoaNew); } this.uuid = uuidOld; $Pessoa.entityStructure.remove(entityOld); $Pessoa.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Pessoa entity) { UniqueOnePessoa unique = new UniqueOnePessoa (entity, entity.getUuid()); return $Pessoa.uniqueOnePessoaStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Pessoa.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setCpf(pull.pullString()); this.setNome(pull.pullString()); this.setLatitude(pull.pullFloat()); this.setLongitude(pull.pullFloat()); this.setCaracteristica((float[]) pull.pullMatrix()); return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Pessoa.classId); push.pushUuid(uuid); push.pushString(this.getCpf()); push.pushString(this.getNome()); push.pushFloat(this.getLatitude()); push.pushFloat(this.getLongitude()); push.pushMatrix(getCaracteristica()); } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfString(this.getCpf()) + Page.sizeOfString(this.getNome()) + Page.sizeOfFloat + Page.sizeOfFloat + Page.sizeOfMatrix(this.getCaracteristica()); } static{ cpf.getSchemas().add( new Schema<$Pessoa, UniqueOnePessoa, java.lang.String>() { @Override public $Pessoa newEntity(java.lang.String value) { $Pessoa obj = new $Pessoa(); obj.setCpf(value); return obj; } @Override public UniqueOnePessoa newKey(java.lang.String value) { UniqueOnePessoa obj = new UniqueOnePessoa(); obj.setCpf(value); return obj; } @Override public EntityStructure<$Pessoa> getEntityStructure() { return $Pessoa.entityStructure; } @Override public KeyStructure<UniqueOnePessoa> getKeyStructure() { return UniqueOnePessoa.uniqueOnePessoaStructure; } } ); nome.getSchemas().add( new Schema<$Pessoa, SortOnePessoa, java.lang.String>() { @Override public $Pessoa newEntity(java.lang.String value) { $Pessoa obj = new $Pessoa(); obj.setNome(value); return obj; } @Override public SortOnePessoa newKey(java.lang.String value) { SortOnePessoa obj = new SortOnePessoa(); obj.setNome(value); return obj; } @Override public EntityStructure<$Pessoa> getEntityStructure() { return $Pessoa.entityStructure; } @Override public KeyStructure<SortOnePessoa> getKeyStructure() { return SortOnePessoa.sortOnePessoaStructure; } } ); latitude.getSchemas().add( new Schema<$Pessoa, RectangleOnePessoa, Float>() { @Override public $Pessoa newEntity(Float value) { $Pessoa obj = new $Pessoa(); obj.setLatitude(value); return obj; } @Override public RectangleOnePessoa newKey(Float value) { RectangleOnePessoa obj = new RectangleOnePessoa(); obj.setLatitude(value); return obj; } @Override public EntityStructure<$Pessoa> getEntityStructure() { return $Pessoa.entityStructure; } @Override public KeyStructure<RectangleOnePessoa> getKeyStructure() { return RectangleOnePessoa.rectangleOnePessoaStructure; } } ); longitude.getSchemas().add( new Schema<$Pessoa, RectangleOnePessoa, Float>() { @Override public $Pessoa newEntity(Float value) { $Pessoa obj = new $Pessoa(); obj.setLongitude(value); return obj; } @Override public RectangleOnePessoa newKey(Float value) { RectangleOnePessoa obj = new RectangleOnePessoa(); obj.setLongitude(value); return obj; } @Override public EntityStructure<$Pessoa> getEntityStructure() { return $Pessoa.entityStructure; } @Override public KeyStructure<RectangleOnePessoa> getKeyStructure() { return RectangleOnePessoa.rectangleOnePessoaStructure; } } ); caracteristica.getSchemas().add( new Schema<$Pessoa, PointOnePessoa, float[]>() { @Override public $Pessoa newEntity(float[] value) { $Pessoa obj = new $Pessoa(); obj.setCaracteristica(value); return obj; } @Override public PointOnePessoa newKey(float[] value) { PointOnePessoa obj = new PointOnePessoa(); obj.setCaracteristica(value); return obj; } @Override public EntityStructure<$Pessoa> getEntityStructure() { return $Pessoa.entityStructure; } @Override public KeyStructure<PointOnePessoa> getKeyStructure() { return PointOnePessoa.pointOnePessoaStructure; } } ); } } 