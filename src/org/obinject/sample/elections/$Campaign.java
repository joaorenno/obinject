package org.obinject.sample.elections; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; public class $Campaign extends Campaign implements Entity<$Campaign> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Campaign.classId == null) {$Campaign.classId = Uuid.fromString("D0CEFB5E-1BD9-30E8-F38E-7AEA2C9ABA70"); }return $Campaign.classId; } public static final BTreeEntity<$Campaign> entityStructure = new BTreeEntity<$Campaign>(new File("build/classes/org/obinject/sample/elections/elections.dbo", 4096)){}; public static final BTree<UniqueOneCampaign> uniqueOneCampaignStructure = new BTree<UniqueOneCampaign>(new File("build/classes/org/obinject/sample/elections/elections.dbo", 4096)){}; public static final Attribute<Integer> register = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Campaign)entity).getRegister(); } }; public static final Attribute<Double> spending = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((Campaign)entity).getSpending(); } }; public static final Attribute<Double> patrimony = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((Campaign)entity).getPatrimony(); } }; public static final Attribute<org.obinject.sample.elections.Candidate> candidate = new Attribute<org.obinject.sample.elections.Candidate> (){ @Override public org.obinject.sample.elections.Candidate valueOfAttribute(Entity entity) { return ((Campaign)entity).getCandidate(); } }; public static final Attribute<java.util.List> campaigners = new Attribute<java.util.List> (){ @Override public java.util.List valueOfAttribute(Entity entity) { return ((Campaign)entity).getCampaigners(); } }; public static final Attribute<org.obinject.sample.elections.Election> election = new Attribute<org.obinject.sample.elections.Election> (){ @Override public org.obinject.sample.elections.Election valueOfAttribute(Entity entity) { return ((Campaign)entity).getElection(); } }; public static final Attribute<org.obinject.sample.elections.Party> party = new Attribute<org.obinject.sample.elections.Party> (){ @Override public org.obinject.sample.elections.Party valueOfAttribute(Entity entity) { return ((Campaign)entity).getParty(); } }; public $Campaign(){ this.uuid = Uuid.generator(); } public $Campaign(Campaign obj){ this.setRegister(obj.getRegister()); this.setSpending(obj.getSpending()); this.setPatrimony(obj.getPatrimony()); this.setCandidate(obj.getCandidate()); this.setCampaigners(obj.getCampaigners()); this.setElection(obj.getElection()); this.setParty(obj.getParty()); this.uuid = Uuid.generator(); } public $Campaign(Campaign obj, Uuid uuid){ this.setRegister(obj.getRegister()); this.setSpending(obj.getSpending()); this.setPatrimony(obj.getPatrimony()); this.setCandidate(obj.getCandidate()); this.setCampaigners(obj.getCampaigners()); this.setElection(obj.getElection()); this.setParty(obj.getParty()); this.uuid = uuid; } public $Campaign($Campaign obj){ this.setRegister(obj.getRegister()); this.setSpending(obj.getSpending()); this.setPatrimony(obj.getPatrimony()); this.setCandidate(obj.getCandidate()); this.setCampaigners(obj.getCampaigners()); this.setElection(obj.getElection()); this.setParty(obj.getParty()); this.uuid = obj.getUuid();; } public $Campaign(Uuid uuid){ this.uuid = uuid; } protected Uuid uuidCandidate; @Override public Candidate getCandidate(){ Candidate superCandidate = super.getCandidate(); if (superCandidate == null && uuidCandidate != null) {superCandidate = $Candidate.entityStructure.find(uuidCandidate); this.setCandidate(superCandidate); }return superCandidate; }private void resetUuidCandidate() { if (this.getCandidate() != null) { if (this.getCandidate() instanceof Entity) { uuidCandidate = ((Entity) this.getCandidate()).getUuid(); } else { $Candidate entity = new $Candidate (this.getCandidate()); uuidCandidate = $Candidate.find(entity); if (uuidCandidate == null) { throw new TransientObjectException("Campaign", "candidate", "Candidate"); } } } }protected java.util.List<Uuid> uuidCampaigners = new java.util.ArrayList<>(); @Override public java.util.List<org.obinject.sample.elections.Campaigner> getCampaigners() {java.util.List<org.obinject.sample.elections.Campaigner> superCampaigners = super.getCampaigners(); if ((superCampaigners.isEmpty()) && (!uuidCampaigners.isEmpty())) {for (Uuid uuid : uuidCampaigners) {superCampaigners.add($Campaigner.entityStructure.find(uuid)); } }return superCampaigners; }private void resetUuidCampaigners(){ uuidCampaigners.clear(); if (this.getCampaigners() != null) {for (Campaigner obj : this.getCampaigners()) { if (obj instanceof Entity) { uuidCampaigners.add(((Entity) obj).getUuid()); } else { $Campaigner entity = new $Campaigner (obj); uuidCampaigners.add($Campaigner.find(entity)); if (uuidCampaigners == null) { throw new TransientObjectException("Campaign", "campaigners", "Campaigner"); } } } } }protected Uuid uuidElection; @Override public Election getElection(){ Election superElection = super.getElection(); if (superElection == null && uuidElection != null) {superElection = $Election.entityStructure.find(uuidElection); this.setElection(superElection); }return superElection; }private void resetUuidElection() { if (this.getElection() != null) { if (this.getElection() instanceof Entity) { uuidElection = ((Entity) this.getElection()).getUuid(); } else { $Election entity = new $Election (this.getElection()); uuidElection = $Election.find(entity); if (uuidElection == null) { throw new TransientObjectException("Campaign", "election", "Election"); } } } }protected Uuid uuidParty; @Override public Party getParty(){ Party superParty = super.getParty(); if (superParty == null && uuidParty != null) {superParty = $Party.entityStructure.find(uuidParty); this.setParty(superParty); }return superParty; }private void resetUuidParty() { if (this.getParty() != null) { if (this.getParty() instanceof Entity) { uuidParty = ((Entity) this.getParty()).getUuid(); } else { $Party entity = new $Party (this.getParty()); uuidParty = $Party.find(entity); if (uuidParty == null) { throw new TransientObjectException("Campaign", "party", "Party"); } } } }@Override public boolean isEqual($Campaign obj) { return (this.getRegister() == obj.getRegister()) && (this.getSpending() == obj.getSpending()) && (this.getPatrimony() == obj.getPatrimony()); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Campaign> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Campaign.find(this); if(uuidInject == null){ resetUuidCandidate(); resetUuidCampaigners(); resetUuidElection(); resetUuidParty(); $Campaign.entityStructure.add(this); UniqueOneCampaign.uniqueOneCampaignStructure.add(new UniqueOneCampaign(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Campaign.find(this); if(uuidReject != null){ UniqueOneCampaign.uniqueOneCampaignStructure.remove(new UniqueOneCampaign(this, this.getUuid())); $Campaign.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Campaign.find(this); $Campaign entityOld = $Campaign.entityStructure.find(uuidOld); if(entityOld != null){ resetUuidCandidate(); resetUuidCampaigners(); resetUuidElection(); resetUuidParty(); UniqueOneCampaign uniqueOneCampaignOld = new UniqueOneCampaign(entityOld, entityOld.getUuid()); UniqueOneCampaign uniqueOneCampaignNew = new UniqueOneCampaign(this, entityOld.getUuid()); if(uniqueOneCampaignOld.hasSameKey(uniqueOneCampaignNew)){ $Campaign.uniqueOneCampaignStructure.remove(uniqueOneCampaignOld); $Campaign.uniqueOneCampaignStructure.add(uniqueOneCampaignNew); } this.uuid = uuidOld; $Campaign.entityStructure.remove(entityOld); $Campaign.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Campaign entity) { UniqueOneCampaign unique = new UniqueOneCampaign (entity, entity.getUuid()); return $Campaign.uniqueOneCampaignStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Campaign.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setRegister(pull.pullInteger()); this.setSpending(pull.pullDouble()); this.setPatrimony(pull.pullDouble()); int totalCandidate = pull.pullInteger(); if(totalCandidate > 0){this.uuidCandidate = pull.pullUuid(); }int totalCampaigners = pull.pullInteger(); for (int i = 0; i < totalCampaigners; i++) {this.uuidCampaigners.add(pull.pullUuid()); }int totalElection = pull.pullInteger(); if(totalElection > 0){this.uuidElection = pull.pullUuid(); }int totalParty = pull.pullInteger(); if(totalParty > 0){this.uuidParty = pull.pullUuid(); }return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Campaign.classId); push.pushUuid(uuid); push.pushInteger(this.getRegister()); push.pushDouble(this.getSpending()); push.pushDouble(this.getPatrimony()); if (this.uuidCandidate != null) { push.pushInteger(1); push.pushUuid(this.uuidCandidate); } else {push.pushInteger(0); } push.pushInteger(this.uuidCampaigners.size()); for (Uuid uuidPush : this.uuidCampaigners) {push.pushUuid(uuidPush); }if (this.uuidElection != null) { push.pushInteger(1); push.pushUuid(this.uuidElection); } else {push.pushInteger(0); } if (this.uuidParty != null) { push.pushInteger(1); push.pushUuid(this.uuidParty); } else {push.pushInteger(0); } } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfInteger + Page.sizeOfDouble + Page.sizeOfDouble + Page.sizeOfEntity(this.uuidCandidate) + Page.sizeOfEntityCollection(this.uuidCampaigners) + Page.sizeOfEntity(this.uuidElection) + Page.sizeOfEntity(this.uuidParty); } static{ register.getSchemas().add( new Schema<$Campaign, UniqueOneCampaign, Integer>() { @Override public $Campaign newEntity(Integer value) { $Campaign obj = new $Campaign(); obj.setRegister(value); return obj; } @Override public UniqueOneCampaign newKey(Integer value) { UniqueOneCampaign obj = new UniqueOneCampaign(); obj.setRegister(value); return obj; } @Override public EntityStructure<$Campaign> getEntityStructure() { return $Campaign.entityStructure; } @Override public KeyStructure<UniqueOneCampaign> getKeyStructure() { return UniqueOneCampaign.uniqueOneCampaignStructure; } } ); } } 