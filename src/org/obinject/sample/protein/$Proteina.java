package org.obinject.sample.protein; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; import org.obinject.storage.MTree; public class $Proteina extends Proteina implements Entity<$Proteina> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Proteina.classId == null) {$Proteina.classId = Uuid.fromString("95708A7F-B423-CAC0-6FE5-2663EFA04A6F"); }return $Proteina.classId; } public static final BTreeEntity<$Proteina> entityStructure = new BTreeEntity<$Proteina>(new File("build/classes/org/obinject/sample/protein/protein.dbo", 8192)){}; public static final BTree<UniqueOneProteina> uniqueOneProteinaStructure = new BTree<UniqueOneProteina>(new File("build/classes/org/obinject/sample/protein/protein.dbo", 8192)){}; public static final MTree<ProteinOneProteina> proteinOneProteinaStructure = new MTree<ProteinOneProteina>(new File("build/classes/org/obinject/sample/protein/protein.dbo", 8192)){}; public static final Attribute<java.lang.String> aminoAcids = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Proteina)entity).getAminoAcids(); } }; public $Proteina(){ this.uuid = Uuid.generator(); } public $Proteina(Proteina obj){ this.setAminoAcids(obj.getAminoAcids()); this.uuid = Uuid.generator(); } public $Proteina(Proteina obj, Uuid uuid){ this.setAminoAcids(obj.getAminoAcids()); this.uuid = uuid; } public $Proteina($Proteina obj){ this.setAminoAcids(obj.getAminoAcids()); this.uuid = obj.getUuid();; } public $Proteina(Uuid uuid){ this.uuid = uuid; } @Override public boolean isEqual($Proteina obj) {  return (((this.getAminoAcids() == null) && (obj.getAminoAcids() == null)) || ((this.getAminoAcids() != null) && (obj.getAminoAcids() != null) && (this.getAminoAcids().equals( obj.getAminoAcids())))); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Proteina> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Proteina.find(this); if(uuidInject == null){ $Proteina.entityStructure.add(this); UniqueOneProteina.uniqueOneProteinaStructure.add(new UniqueOneProteina(this, this.getUuid())); ProteinOneProteina.proteinOneProteinaStructure.add(new ProteinOneProteina(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Proteina.find(this); if(uuidReject != null){ UniqueOneProteina.uniqueOneProteinaStructure.remove(new UniqueOneProteina(this, this.getUuid())); ProteinOneProteina.proteinOneProteinaStructure.remove(new ProteinOneProteina(this, this.getUuid())); $Proteina.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Proteina.find(this); $Proteina entityOld = $Proteina.entityStructure.find(uuidOld); if(entityOld != null){ UniqueOneProteina uniqueOneProteinaOld = new UniqueOneProteina(entityOld, entityOld.getUuid()); UniqueOneProteina uniqueOneProteinaNew = new UniqueOneProteina(this, entityOld.getUuid()); if(uniqueOneProteinaOld.hasSameKey(uniqueOneProteinaNew)){ $Proteina.uniqueOneProteinaStructure.remove(uniqueOneProteinaOld); $Proteina.uniqueOneProteinaStructure.add(uniqueOneProteinaNew); } ProteinOneProteina proteinOneProteinaOld = new ProteinOneProteina(entityOld, entityOld.getUuid()); ProteinOneProteina proteinOneProteinaNew = new ProteinOneProteina(this, entityOld.getUuid()); if(proteinOneProteinaOld.hasSameKey(proteinOneProteinaNew)){ $Proteina.proteinOneProteinaStructure.remove(proteinOneProteinaOld); $Proteina.proteinOneProteinaStructure.add(proteinOneProteinaNew); } this.uuid = uuidOld; $Proteina.entityStructure.remove(entityOld); $Proteina.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Proteina entity) { UniqueOneProteina unique = new UniqueOneProteina (entity, entity.getUuid()); return $Proteina.uniqueOneProteinaStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Proteina.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setAminoAcids(pull.pullString()); return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Proteina.classId); push.pushUuid(uuid); push.pushString(this.getAminoAcids()); } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfString(this.getAminoAcids()); } static{ aminoAcids.getSchemas().add( new Schema<$Proteina, UniqueOneProteina, java.lang.String>() { @Override public $Proteina newEntity(java.lang.String value) { $Proteina obj = new $Proteina(); obj.setAminoAcids(value); return obj; } @Override public UniqueOneProteina newKey(java.lang.String value) { UniqueOneProteina obj = new UniqueOneProteina(); obj.setAminoAcids(value); return obj; } @Override public EntityStructure<$Proteina> getEntityStructure() { return $Proteina.entityStructure; } @Override public KeyStructure<UniqueOneProteina> getKeyStructure() { return UniqueOneProteina.uniqueOneProteinaStructure; } } ); aminoAcids.getSchemas().add( new Schema<$Proteina, ProteinOneProteina, java.lang.String>() { @Override public $Proteina newEntity(java.lang.String value) { $Proteina obj = new $Proteina(); obj.setAminoAcids(value); return obj; } @Override public ProteinOneProteina newKey(java.lang.String value) { ProteinOneProteina obj = new ProteinOneProteina(); obj.setAminoAcids(value); return obj; } @Override public EntityStructure<$Proteina> getEntityStructure() { return $Proteina.entityStructure; } @Override public KeyStructure<ProteinOneProteina> getKeyStructure() { return ProteinOneProteina.proteinOneProteinaStructure; } } ); } } 