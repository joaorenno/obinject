package org.obinject.sample.protein; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.meta.Sort; import org.obinject.meta.Uuid; import org.obinject.storage.KeyStructure; public class UniqueOneProteina extends $Proteina implements Sort<UniqueOneProteina>, Comparable<UniqueOneProteina> { private static Uuid classId; public static Uuid getClassId(){ if (UniqueOneProteina.classId == null) {UniqueOneProteina.classId = Uuid.fromString("37977DAC-981E-248D-52F7-0D1727F9AB63"); }return UniqueOneProteina.classId; } public UniqueOneProteina(){} public UniqueOneProteina($Proteina obj){ super(obj); } public UniqueOneProteina(Proteina obj, Uuid uuid){ super(obj, uuid); } public UniqueOneProteina(Uuid uuid){ super(uuid); } @Override public boolean hasSameKey(UniqueOneProteina obj) {  return (((this.getAminoAcids() == null) && (obj.getAminoAcids() == null)) || ((this.getAminoAcids() != null) && (obj.getAminoAcids() != null) && (this.getAminoAcids().equals( obj.getAminoAcids())))); } @Override public int compareTo(UniqueOneProteina obj) { if (((this.getAminoAcids() == null) || (this.getAminoAcids() != null) && (obj.getAminoAcids() != null) && (this.getAminoAcids().compareTo( obj.getAminoAcids()) < 0))) { return -1; } else if (((this.getAminoAcids() == null) || (this.getAminoAcids() != null) && (obj.getAminoAcids() != null) && (this.getAminoAcids().compareTo( obj.getAminoAcids()) == 0))) { return 0; } else {return 1; } } @Override public KeyStructure<UniqueOneProteina> getKeyStructure() { return uniqueOneProteinaStructure; } @Override public boolean pullKey(byte[] array, int position) { PullPage pull = new PullPage(array, position); this.setAminoAcids(pull.pullString()); return true; } @Override public void pushKey(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushString(this.getAminoAcids()); } @Override public int sizeOfKey() { return  + Page.sizeOfString(this.getAminoAcids()); } } 