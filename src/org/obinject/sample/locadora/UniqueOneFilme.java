package org.obinject.sample.locadora; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.meta.Sort; import org.obinject.meta.Uuid; import org.obinject.storage.KeyStructure; public class UniqueOneFilme extends $Filme implements Sort<UniqueOneFilme>, Comparable<UniqueOneFilme> { private static Uuid classId; public static Uuid getClassId(){ if (UniqueOneFilme.classId == null) {UniqueOneFilme.classId = Uuid.fromString("DB7E19A7-3EFF-CB8E-4592-6BD083868912"); }return UniqueOneFilme.classId; } public UniqueOneFilme(){} public UniqueOneFilme($Filme obj){ super(obj); } public UniqueOneFilme(Filme obj, Uuid uuid){ super(obj, uuid); } public UniqueOneFilme(Uuid uuid){ super(uuid); } @Override public boolean hasSameKey(UniqueOneFilme obj) { return (this.getCodigo() == obj.getCodigo()); } @Override public int compareTo(UniqueOneFilme obj) { if ((this.getCodigo() < obj.getCodigo())) { return -1; } else if ((this.getCodigo() == obj.getCodigo())) { return 0; } else {return 1; } } @Override public KeyStructure<UniqueOneFilme> getKeyStructure() { return uniqueOneFilmeStructure; } @Override public boolean pullKey(byte[] array, int position) { PullPage pull = new PullPage(array, position); this.setCodigo(pull.pullInteger()); return true; } @Override public void pushKey(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushInteger(this.getCodigo()); } @Override public int sizeOfKey() { return  + Page.sizeOfInteger; } } 