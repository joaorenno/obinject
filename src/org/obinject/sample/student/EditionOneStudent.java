package org.obinject.sample.student; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.meta.generator.DistanceUtil; import org.obinject.meta.Edition; import org.obinject.meta.Uuid; import org.obinject.storage.KeyStructure; public class EditionOneStudent extends $Student implements Edition<EditionOneStudent> { private double preservedDistance; private static Uuid classId; public static Uuid getClassId(){ if (EditionOneStudent.classId == null) {EditionOneStudent.classId = Uuid.fromString("E1C6776C-320A-ECAB-42E8-230F9C2F74BB"); }return EditionOneStudent.classId; } public EditionOneStudent(){} public EditionOneStudent($Student obj){ super(obj); } public EditionOneStudent(Student obj, Uuid uuid){ super(obj, uuid); } public EditionOneStudent(Uuid uuid){ super(uuid); } @Override public boolean hasSameKey(EditionOneStudent obj) {  return (((this.getName() == null) && (obj.getName() == null)) || ((this.getName() != null) && (obj.getName() != null) && (this.getName().equals( obj.getName())))); } @Override public double getPreservedDistance() { return this.preservedDistance; } @Override public String getString(){ return "" + getName();} @Override public double distanceTo(EditionOneStudent obj){ return DistanceUtil.levenshtein(this.getString(), obj.getString()); } @Override public KeyStructure<EditionOneStudent> getKeyStructure() { return editionOneStudentStructure; } @Override public boolean pullKey(byte[] array, int position) { PullPage pull = new PullPage(array, position); this.setName(pull.pullString()); return true; } @Override public void pushKey(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushString(this.getName()); } @Override public void setPreservedDistance(double distance) { this.preservedDistance = distance; } @Override public int sizeOfKey() { return  + Page.sizeOfString(this.getName()); } } 