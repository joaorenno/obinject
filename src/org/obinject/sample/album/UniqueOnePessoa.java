package org.obinject.sample.album; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.meta.Sort; import org.obinject.meta.Uuid; import org.obinject.storage.KeyStructure; public class UniqueOnePessoa extends $Pessoa implements Sort<UniqueOnePessoa>, Comparable<UniqueOnePessoa> { private static Uuid classId; public static Uuid getClassId(){ if (UniqueOnePessoa.classId == null) {UniqueOnePessoa.classId = Uuid.fromString("C4249EC1-DD3D-73D8-C1F0-C31FDE75AEE2"); }return UniqueOnePessoa.classId; } public UniqueOnePessoa(){} public UniqueOnePessoa($Pessoa obj){ super(obj); } public UniqueOnePessoa(Pessoa obj, Uuid uuid){ super(obj, uuid); } public UniqueOnePessoa(Uuid uuid){ super(uuid); } @Override public boolean hasSameKey(UniqueOnePessoa obj) {  return (((this.getEmail() == null) && (obj.getEmail() == null)) || ((this.getEmail() != null) && (obj.getEmail() != null) && (this.getEmail().equals( obj.getEmail())))); } @Override public int compareTo(UniqueOnePessoa obj) { if (((this.getEmail() == null) || (this.getEmail() != null) && (obj.getEmail() != null) && (this.getEmail().compareTo( obj.getEmail()) < 0))) { return -1; } else if (((this.getEmail() == null) || (this.getEmail() != null) && (obj.getEmail() != null) && (this.getEmail().compareTo( obj.getEmail()) == 0))) { return 0; } else {return 1; } } @Override public KeyStructure<UniqueOnePessoa> getKeyStructure() { return uniqueOnePessoaStructure; } @Override public boolean pullKey(byte[] array, int position) { PullPage pull = new PullPage(array, position); this.setEmail(pull.pullString()); return true; } @Override public void pushKey(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushString(this.getEmail()); } @Override public int sizeOfKey() { return  + Page.sizeOfString(this.getEmail()); } } 