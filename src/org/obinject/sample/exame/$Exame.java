package org.obinject.sample.exame; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; import org.obinject.storage.MTree; import org.obinject.storage.RTree; public class $Exame extends Exame implements Entity<$Exame> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Exame.classId == null) {$Exame.classId = Uuid.fromString("6F3D3B9F-8501-8B33-3A22-82E743CDAD59"); }return $Exame.classId; } public static final BTreeEntity<$Exame> entityStructure = new BTreeEntity<$Exame>(new File("build/classes/org/obinject/sample/exame/exame.dbo", 4096)){}; public static final BTree<SortOneExame> sortOneExameStructure = new BTree<SortOneExame>(new File("build/classes/org/obinject/sample/exame/exame.dbo", 4096)){}; public static final BTree<UniqueOneExame> uniqueOneExameStructure = new BTree<UniqueOneExame>(new File("build/classes/org/obinject/sample/exame/exame.dbo", 4096)){}; public static final BTree<UniqueTwoExame> uniqueTwoExameStructure = new BTree<UniqueTwoExame>(new File("build/classes/org/obinject/sample/exame/exame.dbo", 4096)){}; public static final RTree<RectangleOneExame> rectangleOneExameStructure = new RTree<RectangleOneExame>(new File("build/classes/org/obinject/sample/exame/exame.dbo", 4096)){}; public static final MTree<CoordinateOneExame> coordinateOneExameStructure = new MTree<CoordinateOneExame>(new File("build/classes/org/obinject/sample/exame/exame.dbo", 4096)){}; public static final MTree<EditionOneExame> editionOneExameStructure = new MTree<EditionOneExame>(new File("build/classes/org/obinject/sample/exame/exame.dbo", 4096)){}; public static final MTree<FeatureOneExame> featureOneExameStructure = new MTree<FeatureOneExame>(new File("build/classes/org/obinject/sample/exame/exame.dbo", 4096)){}; public static final MTree<FeatureTwoExame> featureTwoExameStructure = new MTree<FeatureTwoExame>(new File("build/classes/org/obinject/sample/exame/exame.dbo", 4096)){}; public static final MTree<PointOneExame> pointOneExameStructure = new MTree<PointOneExame>(new File("build/classes/org/obinject/sample/exame/exame.dbo", 4096)){}; public static final Attribute<java.lang.String> numero = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Exame)entity).getNumero(); } }; public static final Attribute<java.lang.String> paciente = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Exame)entity).getPaciente(); } }; public static final Attribute<java.util.Date> data = new Attribute<java.util.Date> (){ @Override public java.util.Date valueOfAttribute(Entity entity) { return ((Exame)entity).getData(); } }; public static final Attribute<java.lang.String> medico = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Exame)entity).getMedico(); } }; public static final Attribute<java.lang.String> clinica = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Exame)entity).getClinica(); } }; public static final Attribute<java.awt.image.BufferedImage> imagem = new Attribute<java.awt.image.BufferedImage> (){ @Override public java.awt.image.BufferedImage valueOfAttribute(Entity entity) { return ((Exame)entity).getImagem(); } }; public static final Attribute<Double> latitudeImagem = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((Exame)entity).getLatitudeImagem(); } }; public static final Attribute<Double> latitudeExtensionImagem = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((Exame)entity).getLatitudeExtensionImagem(); } }; public static final Attribute<Double> longitudeImagem = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((Exame)entity).getLongitudeImagem(); } }; public static final Attribute<Double> longitudeExtensionImagem = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((Exame)entity).getLongitudeExtensionImagem(); } }; public $Exame(){ this.uuid = Uuid.generator(); } public $Exame(Exame obj){ this.setNumero(obj.getNumero()); this.setPaciente(obj.getPaciente()); this.setData(obj.getData()); this.setMedico(obj.getMedico()); this.setClinica(obj.getClinica()); this.setImagem(obj.getImagem()); this.setLatitudeImagem(obj.getLatitudeImagem()); this.setLatitudeExtensionImagem(obj.getLatitudeExtensionImagem()); this.setLongitudeImagem(obj.getLongitudeImagem()); this.setLongitudeExtensionImagem(obj.getLongitudeExtensionImagem()); this.uuid = Uuid.generator(); } public $Exame(Exame obj, Uuid uuid){ this.setNumero(obj.getNumero()); this.setPaciente(obj.getPaciente()); this.setData(obj.getData()); this.setMedico(obj.getMedico()); this.setClinica(obj.getClinica()); this.setImagem(obj.getImagem()); this.setLatitudeImagem(obj.getLatitudeImagem()); this.setLatitudeExtensionImagem(obj.getLatitudeExtensionImagem()); this.setLongitudeImagem(obj.getLongitudeImagem()); this.setLongitudeExtensionImagem(obj.getLongitudeExtensionImagem()); this.uuid = uuid; } public $Exame($Exame obj){ this.setNumero(obj.getNumero()); this.setPaciente(obj.getPaciente()); this.setData(obj.getData()); this.setMedico(obj.getMedico()); this.setClinica(obj.getClinica()); this.setImagem(obj.getImagem()); this.setLatitudeImagem(obj.getLatitudeImagem()); this.setLatitudeExtensionImagem(obj.getLatitudeExtensionImagem()); this.setLongitudeImagem(obj.getLongitudeImagem()); this.setLongitudeExtensionImagem(obj.getLongitudeExtensionImagem()); this.uuid = obj.getUuid();; } public $Exame(Uuid uuid){ this.uuid = uuid; } @Override public boolean isEqual($Exame obj) {  return (((this.getNumero() == null) && (obj.getNumero() == null)) || ((this.getNumero() != null) && (obj.getNumero() != null) && (this.getNumero().equals( obj.getNumero())))) && (((this.getPaciente() == null) && (obj.getPaciente() == null)) || ((this.getPaciente() != null) && (obj.getPaciente() != null) && (this.getPaciente().equals( obj.getPaciente())))) && (((this.getData() == null) && (obj.getData() == null)) || ((this.getData() != null) && (obj.getData() != null) && (this.getData().equals( obj.getData())))) && (((this.getMedico() == null) && (obj.getMedico() == null)) || ((this.getMedico() != null) && (obj.getMedico() != null) && (this.getMedico().equals( obj.getMedico())))) && (((this.getClinica() == null) && (obj.getClinica() == null)) || ((this.getClinica() != null) && (obj.getClinica() != null) && (this.getClinica().equals( obj.getClinica())))) && (this.getLatitudeImagem() == obj.getLatitudeImagem()) && (this.getLatitudeExtensionImagem() == obj.getLatitudeExtensionImagem()) && (this.getLongitudeImagem() == obj.getLongitudeImagem()) && (this.getLongitudeExtensionImagem() == obj.getLongitudeExtensionImagem()); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Exame> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Exame.find(this); if(uuidInject == null){ $Exame.entityStructure.add(this); SortOneExame.sortOneExameStructure.add(new SortOneExame(this, this.getUuid())); UniqueOneExame.uniqueOneExameStructure.add(new UniqueOneExame(this, this.getUuid())); UniqueTwoExame.uniqueTwoExameStructure.add(new UniqueTwoExame(this, this.getUuid())); RectangleOneExame.rectangleOneExameStructure.add(new RectangleOneExame(this, this.getUuid())); CoordinateOneExame.coordinateOneExameStructure.add(new CoordinateOneExame(this, this.getUuid())); EditionOneExame.editionOneExameStructure.add(new EditionOneExame(this, this.getUuid())); FeatureOneExame.featureOneExameStructure.add(new FeatureOneExame(this, this.getUuid())); FeatureTwoExame.featureTwoExameStructure.add(new FeatureTwoExame(this, this.getUuid())); PointOneExame.pointOneExameStructure.add(new PointOneExame(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Exame.find(this); if(uuidReject != null){ SortOneExame.sortOneExameStructure.remove(new SortOneExame(this, this.getUuid())); UniqueOneExame.uniqueOneExameStructure.remove(new UniqueOneExame(this, this.getUuid())); UniqueTwoExame.uniqueTwoExameStructure.remove(new UniqueTwoExame(this, this.getUuid())); RectangleOneExame.rectangleOneExameStructure.remove(new RectangleOneExame(this, this.getUuid())); CoordinateOneExame.coordinateOneExameStructure.remove(new CoordinateOneExame(this, this.getUuid())); EditionOneExame.editionOneExameStructure.remove(new EditionOneExame(this, this.getUuid())); FeatureOneExame.featureOneExameStructure.remove(new FeatureOneExame(this, this.getUuid())); FeatureTwoExame.featureTwoExameStructure.remove(new FeatureTwoExame(this, this.getUuid())); PointOneExame.pointOneExameStructure.remove(new PointOneExame(this, this.getUuid())); $Exame.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Exame.find(this); $Exame entityOld = $Exame.entityStructure.find(uuidOld); if(entityOld != null){ SortOneExame sortOneExameOld = new SortOneExame(entityOld, entityOld.getUuid()); SortOneExame sortOneExameNew = new SortOneExame(this, entityOld.getUuid()); if(sortOneExameOld.hasSameKey(sortOneExameNew)){ $Exame.sortOneExameStructure.remove(sortOneExameOld); $Exame.sortOneExameStructure.add(sortOneExameNew); } UniqueOneExame uniqueOneExameOld = new UniqueOneExame(entityOld, entityOld.getUuid()); UniqueOneExame uniqueOneExameNew = new UniqueOneExame(this, entityOld.getUuid()); if(uniqueOneExameOld.hasSameKey(uniqueOneExameNew)){ $Exame.uniqueOneExameStructure.remove(uniqueOneExameOld); $Exame.uniqueOneExameStructure.add(uniqueOneExameNew); } UniqueTwoExame uniqueTwoExameOld = new UniqueTwoExame(entityOld, entityOld.getUuid()); UniqueTwoExame uniqueTwoExameNew = new UniqueTwoExame(this, entityOld.getUuid()); if(uniqueTwoExameOld.hasSameKey(uniqueTwoExameNew)){ $Exame.uniqueTwoExameStructure.remove(uniqueTwoExameOld); $Exame.uniqueTwoExameStructure.add(uniqueTwoExameNew); } RectangleOneExame rectangleOneExameOld = new RectangleOneExame(entityOld, entityOld.getUuid()); RectangleOneExame rectangleOneExameNew = new RectangleOneExame(this, entityOld.getUuid()); if(rectangleOneExameOld.hasSameKey(rectangleOneExameNew)){ $Exame.rectangleOneExameStructure.remove(rectangleOneExameOld); $Exame.rectangleOneExameStructure.add(rectangleOneExameNew); } CoordinateOneExame coordinateOneExameOld = new CoordinateOneExame(entityOld, entityOld.getUuid()); CoordinateOneExame coordinateOneExameNew = new CoordinateOneExame(this, entityOld.getUuid()); if(coordinateOneExameOld.hasSameKey(coordinateOneExameNew)){ $Exame.coordinateOneExameStructure.remove(coordinateOneExameOld); $Exame.coordinateOneExameStructure.add(coordinateOneExameNew); } EditionOneExame editionOneExameOld = new EditionOneExame(entityOld, entityOld.getUuid()); EditionOneExame editionOneExameNew = new EditionOneExame(this, entityOld.getUuid()); if(editionOneExameOld.hasSameKey(editionOneExameNew)){ $Exame.editionOneExameStructure.remove(editionOneExameOld); $Exame.editionOneExameStructure.add(editionOneExameNew); } FeatureOneExame featureOneExameOld = new FeatureOneExame(entityOld, entityOld.getUuid()); FeatureOneExame featureOneExameNew = new FeatureOneExame(this, entityOld.getUuid()); if(featureOneExameOld.hasSameKey(featureOneExameNew)){ $Exame.featureOneExameStructure.remove(featureOneExameOld); $Exame.featureOneExameStructure.add(featureOneExameNew); } FeatureTwoExame featureTwoExameOld = new FeatureTwoExame(entityOld, entityOld.getUuid()); FeatureTwoExame featureTwoExameNew = new FeatureTwoExame(this, entityOld.getUuid()); if(featureTwoExameOld.hasSameKey(featureTwoExameNew)){ $Exame.featureTwoExameStructure.remove(featureTwoExameOld); $Exame.featureTwoExameStructure.add(featureTwoExameNew); } PointOneExame pointOneExameOld = new PointOneExame(entityOld, entityOld.getUuid()); PointOneExame pointOneExameNew = new PointOneExame(this, entityOld.getUuid()); if(pointOneExameOld.hasSameKey(pointOneExameNew)){ $Exame.pointOneExameStructure.remove(pointOneExameOld); $Exame.pointOneExameStructure.add(pointOneExameNew); } this.uuid = uuidOld; $Exame.entityStructure.remove(entityOld); $Exame.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Exame entity) { UniqueOneExame unique = new UniqueOneExame (entity, entity.getUuid()); return $Exame.uniqueOneExameStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Exame.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setNumero(pull.pullString()); this.setPaciente(pull.pullString()); this.setData(pull.pullDate()); this.setMedico(pull.pullString()); this.setClinica(pull.pullString()); this.setLatitudeImagem(pull.pullDouble()); this.setLatitudeExtensionImagem(pull.pullDouble()); this.setLongitudeImagem(pull.pullDouble()); this.setLongitudeExtensionImagem(pull.pullDouble()); return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Exame.classId); push.pushUuid(uuid); push.pushString(this.getNumero()); push.pushString(this.getPaciente()); push.pushDate(this.getData()); push.pushString(this.getMedico()); push.pushString(this.getClinica()); push.pushDouble(this.getLatitudeImagem()); push.pushDouble(this.getLatitudeExtensionImagem()); push.pushDouble(this.getLongitudeImagem()); push.pushDouble(this.getLongitudeExtensionImagem()); } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfString(this.getNumero()) + Page.sizeOfString(this.getPaciente()) + Page.sizeOfDate + Page.sizeOfString(this.getMedico()) + Page.sizeOfString(this.getClinica()) + Page.sizeOfDouble + Page.sizeOfDouble + Page.sizeOfDouble + Page.sizeOfDouble; } static{ numero.getSchemas().add( new Schema<$Exame, UniqueOneExame, java.lang.String>() { @Override public $Exame newEntity(java.lang.String value) { $Exame obj = new $Exame(); obj.setNumero(value); return obj; } @Override public UniqueOneExame newKey(java.lang.String value) { UniqueOneExame obj = new UniqueOneExame(); obj.setNumero(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<UniqueOneExame> getKeyStructure() { return UniqueOneExame.uniqueOneExameStructure; } } ); paciente.getSchemas().add( new Schema<$Exame, UniqueTwoExame, java.lang.String>() { @Override public $Exame newEntity(java.lang.String value) { $Exame obj = new $Exame(); obj.setPaciente(value); return obj; } @Override public UniqueTwoExame newKey(java.lang.String value) { UniqueTwoExame obj = new UniqueTwoExame(); obj.setPaciente(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<UniqueTwoExame> getKeyStructure() { return UniqueTwoExame.uniqueTwoExameStructure; } } ); data.getSchemas().add( new Schema<$Exame, UniqueTwoExame, java.util.Date>() { @Override public $Exame newEntity(java.util.Date value) { $Exame obj = new $Exame(); obj.setData(value); return obj; } @Override public UniqueTwoExame newKey(java.util.Date value) { UniqueTwoExame obj = new UniqueTwoExame(); obj.setData(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<UniqueTwoExame> getKeyStructure() { return UniqueTwoExame.uniqueTwoExameStructure; } } ); medico.getSchemas().add( new Schema<$Exame, EditionOneExame, java.lang.String>() { @Override public $Exame newEntity(java.lang.String value) { $Exame obj = new $Exame(); obj.setMedico(value); return obj; } @Override public EditionOneExame newKey(java.lang.String value) { EditionOneExame obj = new EditionOneExame(); obj.setMedico(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<EditionOneExame> getKeyStructure() { return EditionOneExame.editionOneExameStructure; } } ); medico.getSchemas().add( new Schema<$Exame, UniqueTwoExame, java.lang.String>() { @Override public $Exame newEntity(java.lang.String value) { $Exame obj = new $Exame(); obj.setMedico(value); return obj; } @Override public UniqueTwoExame newKey(java.lang.String value) { UniqueTwoExame obj = new UniqueTwoExame(); obj.setMedico(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<UniqueTwoExame> getKeyStructure() { return UniqueTwoExame.uniqueTwoExameStructure; } } ); clinica.getSchemas().add( new Schema<$Exame, SortOneExame, java.lang.String>() { @Override public $Exame newEntity(java.lang.String value) { $Exame obj = new $Exame(); obj.setClinica(value); return obj; } @Override public SortOneExame newKey(java.lang.String value) { SortOneExame obj = new SortOneExame(); obj.setClinica(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<SortOneExame> getKeyStructure() { return SortOneExame.sortOneExameStructure; } } ); imagem.getSchemas().add( new Schema<$Exame, FeatureOneExame, java.awt.image.BufferedImage>() { @Override public $Exame newEntity(java.awt.image.BufferedImage value) { $Exame obj = new $Exame(); obj.setImagem(value); return obj; } @Override public FeatureOneExame newKey(java.awt.image.BufferedImage value) { FeatureOneExame obj = new FeatureOneExame(); obj.setImagem(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<FeatureOneExame> getKeyStructure() { return FeatureOneExame.featureOneExameStructure; } } ); imagem.getSchemas().add( new Schema<$Exame, FeatureTwoExame, java.awt.image.BufferedImage>() { @Override public $Exame newEntity(java.awt.image.BufferedImage value) { $Exame obj = new $Exame(); obj.setImagem(value); return obj; } @Override public FeatureTwoExame newKey(java.awt.image.BufferedImage value) { FeatureTwoExame obj = new FeatureTwoExame(); obj.setImagem(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<FeatureTwoExame> getKeyStructure() { return FeatureTwoExame.featureTwoExameStructure; } } ); imagem.getSchemas().add( new Schema<$Exame, FeatureTwoExame, java.awt.image.BufferedImage>() { @Override public $Exame newEntity(java.awt.image.BufferedImage value) { $Exame obj = new $Exame(); obj.setImagem(value); return obj; } @Override public FeatureTwoExame newKey(java.awt.image.BufferedImage value) { FeatureTwoExame obj = new FeatureTwoExame(); obj.setImagem(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<FeatureTwoExame> getKeyStructure() { return FeatureTwoExame.featureTwoExameStructure; } } ); imagem.getSchemas().add( new Schema<$Exame, FeatureTwoExame, java.awt.image.BufferedImage>() { @Override public $Exame newEntity(java.awt.image.BufferedImage value) { $Exame obj = new $Exame(); obj.setImagem(value); return obj; } @Override public FeatureTwoExame newKey(java.awt.image.BufferedImage value) { FeatureTwoExame obj = new FeatureTwoExame(); obj.setImagem(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<FeatureTwoExame> getKeyStructure() { return FeatureTwoExame.featureTwoExameStructure; } } ); latitudeImagem.getSchemas().add( new Schema<$Exame, RectangleOneExame, Double>() { @Override public $Exame newEntity(Double value) { $Exame obj = new $Exame(); obj.setLatitudeImagem(value); return obj; } @Override public RectangleOneExame newKey(Double value) { RectangleOneExame obj = new RectangleOneExame(); obj.setLatitudeImagem(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<RectangleOneExame> getKeyStructure() { return RectangleOneExame.rectangleOneExameStructure; } } ); latitudeImagem.getSchemas().add( new Schema<$Exame, PointOneExame, Double>() { @Override public $Exame newEntity(Double value) { $Exame obj = new $Exame(); obj.setLatitudeImagem(value); return obj; } @Override public PointOneExame newKey(Double value) { PointOneExame obj = new PointOneExame(); obj.setLatitudeImagem(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<PointOneExame> getKeyStructure() { return PointOneExame.pointOneExameStructure; } } ); latitudeImagem.getSchemas().add( new Schema<$Exame, CoordinateOneExame, Double>() { @Override public $Exame newEntity(Double value) { $Exame obj = new $Exame(); obj.setLatitudeImagem(value); return obj; } @Override public CoordinateOneExame newKey(Double value) { CoordinateOneExame obj = new CoordinateOneExame(); obj.setLatitudeImagem(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<CoordinateOneExame> getKeyStructure() { return CoordinateOneExame.coordinateOneExameStructure; } } ); latitudeExtensionImagem.getSchemas().add( new Schema<$Exame, RectangleOneExame, Double>() { @Override public $Exame newEntity(Double value) { $Exame obj = new $Exame(); obj.setLatitudeExtensionImagem(value); return obj; } @Override public RectangleOneExame newKey(Double value) { RectangleOneExame obj = new RectangleOneExame(); obj.setLatitudeExtensionImagem(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<RectangleOneExame> getKeyStructure() { return RectangleOneExame.rectangleOneExameStructure; } } ); longitudeImagem.getSchemas().add( new Schema<$Exame, RectangleOneExame, Double>() { @Override public $Exame newEntity(Double value) { $Exame obj = new $Exame(); obj.setLongitudeImagem(value); return obj; } @Override public RectangleOneExame newKey(Double value) { RectangleOneExame obj = new RectangleOneExame(); obj.setLongitudeImagem(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<RectangleOneExame> getKeyStructure() { return RectangleOneExame.rectangleOneExameStructure; } } ); longitudeImagem.getSchemas().add( new Schema<$Exame, PointOneExame, Double>() { @Override public $Exame newEntity(Double value) { $Exame obj = new $Exame(); obj.setLongitudeImagem(value); return obj; } @Override public PointOneExame newKey(Double value) { PointOneExame obj = new PointOneExame(); obj.setLongitudeImagem(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<PointOneExame> getKeyStructure() { return PointOneExame.pointOneExameStructure; } } ); longitudeImagem.getSchemas().add( new Schema<$Exame, CoordinateOneExame, Double>() { @Override public $Exame newEntity(Double value) { $Exame obj = new $Exame(); obj.setLongitudeImagem(value); return obj; } @Override public CoordinateOneExame newKey(Double value) { CoordinateOneExame obj = new CoordinateOneExame(); obj.setLongitudeImagem(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<CoordinateOneExame> getKeyStructure() { return CoordinateOneExame.coordinateOneExameStructure; } } ); longitudeExtensionImagem.getSchemas().add( new Schema<$Exame, RectangleOneExame, Double>() { @Override public $Exame newEntity(Double value) { $Exame obj = new $Exame(); obj.setLongitudeExtensionImagem(value); return obj; } @Override public RectangleOneExame newKey(Double value) { RectangleOneExame obj = new RectangleOneExame(); obj.setLongitudeExtensionImagem(value); return obj; } @Override public EntityStructure<$Exame> getEntityStructure() { return $Exame.entityStructure; } @Override public KeyStructure<RectangleOneExame> getKeyStructure() { return RectangleOneExame.rectangleOneExameStructure; } } ); } } 