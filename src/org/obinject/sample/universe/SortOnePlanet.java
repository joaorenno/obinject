package org.obinject.sample.universe; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.meta.Sort; import org.obinject.meta.Uuid; import org.obinject.storage.KeyStructure; public class SortOnePlanet extends $Planet implements Sort<SortOnePlanet>, Comparable<SortOnePlanet> { private static Uuid classId; public static Uuid getClassId(){ if (SortOnePlanet.classId == null) {SortOnePlanet.classId = Uuid.fromString("D200455C-C9F1-9E50-5C98-C71F1C586D6A"); }return SortOnePlanet.classId; } public SortOnePlanet(){} public SortOnePlanet($Planet obj){ super(obj); } public SortOnePlanet(Planet obj, Uuid uuid){ super(obj, uuid); } public SortOnePlanet(Uuid uuid){ super(uuid); } @Override public boolean hasSameKey(SortOnePlanet obj) {  return (((this.getName() == null) && (obj.getName() == null)) || ((this.getName() != null) && (obj.getName() != null) && (this.getName().equals( obj.getName())))) && (this.getLatitude() == obj.getLatitude()) && (this.getLongitude() == obj.getLongitude()); } @Override public int compareTo(SortOnePlanet obj) { if (((this.getName() == null) || (this.getName() != null) && (obj.getName() != null) && (this.getName().compareTo( obj.getName()) < 0)) && (this.getLatitude() < obj.getLatitude()) && (this.getLongitude() < obj.getLongitude())) { return -1; } else if (((this.getName() == null) || (this.getName() != null) && (obj.getName() != null) && (this.getName().compareTo( obj.getName()) == 0)) && (this.getLatitude() == obj.getLatitude()) && (this.getLongitude() == obj.getLongitude())) { return 0; } else {return 1; } }@Override public KeyStructure<SortOnePlanet> getKeyStructure() { return sortOnePlanetStructure; } @Override public boolean pullKey(byte[] array, int position) { PullPage pull = new PullPage(array, position); this.setName(pull.pullString()); this.setLatitude(pull.pullFloat()); this.setLongitude(pull.pullFloat()); return true; } @Override public void pushKey(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushString(this.getName()); push.pushFloat(this.getLatitude()); push.pushFloat(this.getLongitude()); } @Override public int sizeOfKey() { return  + Page.sizeOfString(this.getName()) + Page.sizeOfFloat + Page.sizeOfFloat; } } 