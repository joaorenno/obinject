package org.obinject.sample.universe; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.meta.Sort; import org.obinject.meta.Uuid; import org.obinject.storage.KeyStructure; public class SortTwoPlanet extends $Planet implements Sort<SortTwoPlanet>, Comparable<SortTwoPlanet> { private static Uuid classId; public static Uuid getClassId(){ if (SortTwoPlanet.classId == null) {SortTwoPlanet.classId = Uuid.fromString("726CA4DF-AD1B-A87A-0571-EE10F7088AFA"); }return SortTwoPlanet.classId; } public SortTwoPlanet(){} public SortTwoPlanet($Planet obj){ super(obj); } public SortTwoPlanet(Planet obj, Uuid uuid){ super(obj, uuid); } public SortTwoPlanet(Uuid uuid){ super(uuid); } @Override public boolean hasSameKey(SortTwoPlanet obj) { return (this.getLongitude() == obj.getLongitude()) && (this.getLatitude() == obj.getLatitude()) && (((this.getName() == null) && (obj.getName() == null)) || ((this.getName() != null) && (obj.getName() != null) && (this.getName().equals( obj.getName())))); } @Override public int compareTo(SortTwoPlanet obj) { if ((this.getLongitude() < obj.getLongitude()) && (this.getLatitude() < obj.getLatitude()) && ((this.getName() == null) || (this.getName() != null) && (obj.getName() != null) && (this.getName().compareTo( obj.getName()) < 0))) { return -1; } else if ((this.getLongitude() == obj.getLongitude()) && (this.getLatitude() == obj.getLatitude()) && ((this.getName() == null) || (this.getName() != null) && (obj.getName() != null) && (this.getName().compareTo( obj.getName()) == 0))) { return 0; } else {return 1; } }@Override public KeyStructure<SortTwoPlanet> getKeyStructure() { return sortTwoPlanetStructure; } @Override public boolean pullKey(byte[] array, int position) { PullPage pull = new PullPage(array, position); this.setLongitude(pull.pullFloat()); this.setLatitude(pull.pullFloat()); this.setName(pull.pullString()); return true; } @Override public void pushKey(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushFloat(this.getLongitude()); push.pushFloat(this.getLatitude()); push.pushString(this.getName()); } @Override public int sizeOfKey() { return  + Page.sizeOfFloat + Page.sizeOfFloat + Page.sizeOfString(this.getName()); } } 