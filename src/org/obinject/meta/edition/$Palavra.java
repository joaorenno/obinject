package org.obinject.meta.edition; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; import org.obinject.storage.MTree; public class $Palavra extends Palavra implements Entity<$Palavra> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($Palavra.classId == null) {$Palavra.classId = Uuid.fromString("E565B94B-681F-576C-35C4-BC0E95C3BCCC"); }return $Palavra.classId; } public static final BTreeEntity<$Palavra> entityStructure = new BTreeEntity<$Palavra>(new File("build/classes/org/obinject/meta/edition/edition.dbo", 4096)){}; public static final BTree<UniqueOnePalavra> uniqueOnePalavraStructure = new BTree<UniqueOnePalavra>(new File("build/classes/org/obinject/meta/edition/edition.dbo", 4096)){}; public static final MTree<EditionOnePalavra> editionOnePalavraStructure = new MTree<EditionOnePalavra>(new File("build/classes/org/obinject/meta/edition/edition.dbo", 4096)){}; public static final Attribute<java.lang.String> palavra = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Palavra)entity).getPalavra(); } }; public static final Attribute<java.lang.String> antonimo = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Palavra)entity).getAntonimo(); } }; public static final Attribute<java.lang.String> sinonimo = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((Palavra)entity).getSinonimo(); } }; public static final Attribute<Integer> codigo = new Attribute<Integer> (){ @Override public Integer valueOfAttribute(Entity entity) { return ((Palavra)entity).getCodigo(); } }; public $Palavra(){ this.uuid = Uuid.generator(); } public $Palavra(Palavra obj){ this.setPalavra(obj.getPalavra()); this.setAntonimo(obj.getAntonimo()); this.setSinonimo(obj.getSinonimo()); this.setCodigo(obj.getCodigo()); this.uuid = Uuid.generator(); } public $Palavra(Palavra obj, Uuid uuid){ this.setPalavra(obj.getPalavra()); this.setAntonimo(obj.getAntonimo()); this.setSinonimo(obj.getSinonimo()); this.setCodigo(obj.getCodigo()); this.uuid = uuid; } public $Palavra($Palavra obj){ this.setPalavra(obj.getPalavra()); this.setAntonimo(obj.getAntonimo()); this.setSinonimo(obj.getSinonimo()); this.setCodigo(obj.getCodigo()); this.uuid = obj.getUuid();; } public $Palavra(Uuid uuid){ this.uuid = uuid; } @Override public boolean isEqual($Palavra obj) {  return (((this.getPalavra() == null) && (obj.getPalavra() == null)) || ((this.getPalavra() != null) && (obj.getPalavra() != null) && (this.getPalavra().equals( obj.getPalavra())))) && (((this.getAntonimo() == null) && (obj.getAntonimo() == null)) || ((this.getAntonimo() != null) && (obj.getAntonimo() != null) && (this.getAntonimo().equals( obj.getAntonimo())))) && (((this.getSinonimo() == null) && (obj.getSinonimo() == null)) || ((this.getSinonimo() != null) && (obj.getSinonimo() != null) && (this.getSinonimo().equals( obj.getSinonimo())))) && (this.getCodigo() == obj.getCodigo()); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$Palavra> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $Palavra.find(this); if(uuidInject == null){ $Palavra.entityStructure.add(this); UniqueOnePalavra.uniqueOnePalavraStructure.add(new UniqueOnePalavra(this, this.getUuid())); EditionOnePalavra.editionOnePalavraStructure.add(new EditionOnePalavra(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $Palavra.find(this); if(uuidReject != null){ UniqueOnePalavra.uniqueOnePalavraStructure.remove(new UniqueOnePalavra(this, this.getUuid())); EditionOnePalavra.editionOnePalavraStructure.remove(new EditionOnePalavra(this, this.getUuid())); $Palavra.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $Palavra.find(this); $Palavra entityOld = $Palavra.entityStructure.find(uuidOld); if(entityOld != null){ UniqueOnePalavra uniqueOnePalavraOld = new UniqueOnePalavra(entityOld, entityOld.getUuid()); UniqueOnePalavra uniqueOnePalavraNew = new UniqueOnePalavra(this, entityOld.getUuid()); if(uniqueOnePalavraOld.hasSameKey(uniqueOnePalavraNew)){ $Palavra.uniqueOnePalavraStructure.remove(uniqueOnePalavraOld); $Palavra.uniqueOnePalavraStructure.add(uniqueOnePalavraNew); } EditionOnePalavra editionOnePalavraOld = new EditionOnePalavra(entityOld, entityOld.getUuid()); EditionOnePalavra editionOnePalavraNew = new EditionOnePalavra(this, entityOld.getUuid()); if(editionOnePalavraOld.hasSameKey(editionOnePalavraNew)){ $Palavra.editionOnePalavraStructure.remove(editionOnePalavraOld); $Palavra.editionOnePalavraStructure.add(editionOnePalavraNew); } this.uuid = uuidOld; $Palavra.entityStructure.remove(entityOld); $Palavra.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($Palavra entity) { UniqueOnePalavra unique = new UniqueOnePalavra (entity, entity.getUuid()); return $Palavra.uniqueOnePalavraStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($Palavra.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setPalavra(pull.pullString()); this.setAntonimo(pull.pullString()); this.setSinonimo(pull.pullString()); this.setCodigo(pull.pullInteger()); return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($Palavra.classId); push.pushUuid(uuid); push.pushString(this.getPalavra()); push.pushString(this.getAntonimo()); push.pushString(this.getSinonimo()); push.pushInteger(this.getCodigo()); } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfString(this.getPalavra()) + Page.sizeOfString(this.getAntonimo()) + Page.sizeOfString(this.getSinonimo()) + Page.sizeOfInteger; } static{ palavra.getSchemas().add( new Schema<$Palavra, EditionOnePalavra, java.lang.String>() { @Override public $Palavra newEntity(java.lang.String value) { $Palavra obj = new $Palavra(); obj.setPalavra(value); return obj; } @Override public EditionOnePalavra newKey(java.lang.String value) { EditionOnePalavra obj = new EditionOnePalavra(); obj.setPalavra(value); return obj; } @Override public EntityStructure<$Palavra> getEntityStructure() { return $Palavra.entityStructure; } @Override public KeyStructure<EditionOnePalavra> getKeyStructure() { return EditionOnePalavra.editionOnePalavraStructure; } } ); antonimo.getSchemas().add( new Schema<$Palavra, EditionOnePalavra, java.lang.String>() { @Override public $Palavra newEntity(java.lang.String value) { $Palavra obj = new $Palavra(); obj.setAntonimo(value); return obj; } @Override public EditionOnePalavra newKey(java.lang.String value) { EditionOnePalavra obj = new EditionOnePalavra(); obj.setAntonimo(value); return obj; } @Override public EntityStructure<$Palavra> getEntityStructure() { return $Palavra.entityStructure; } @Override public KeyStructure<EditionOnePalavra> getKeyStructure() { return EditionOnePalavra.editionOnePalavraStructure; } } ); sinonimo.getSchemas().add( new Schema<$Palavra, EditionOnePalavra, java.lang.String>() { @Override public $Palavra newEntity(java.lang.String value) { $Palavra obj = new $Palavra(); obj.setSinonimo(value); return obj; } @Override public EditionOnePalavra newKey(java.lang.String value) { EditionOnePalavra obj = new EditionOnePalavra(); obj.setSinonimo(value); return obj; } @Override public EntityStructure<$Palavra> getEntityStructure() { return $Palavra.entityStructure; } @Override public KeyStructure<EditionOnePalavra> getKeyStructure() { return EditionOnePalavra.editionOnePalavraStructure; } } ); codigo.getSchemas().add( new Schema<$Palavra, UniqueOnePalavra, Integer>() { @Override public $Palavra newEntity(Integer value) { $Palavra obj = new $Palavra(); obj.setCodigo(value); return obj; } @Override public UniqueOnePalavra newKey(Integer value) { UniqueOnePalavra obj = new UniqueOnePalavra(); obj.setCodigo(value); return obj; } @Override public EntityStructure<$Palavra> getEntityStructure() { return $Palavra.entityStructure; } @Override public KeyStructure<UniqueOnePalavra> getKeyStructure() { return UniqueOnePalavra.uniqueOnePalavraStructure; } } ); } } 