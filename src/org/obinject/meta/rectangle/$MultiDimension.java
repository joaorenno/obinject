package org.obinject.meta.rectangle; import org.obinject.block.Page; import org.obinject.block.PullPage; import org.obinject.block.PushPage; import org.obinject.device.File; import org.obinject.exception.TransientObjectException; import org.obinject.meta.Entity; import org.obinject.meta.Uuid; import org.obinject.queries.Attribute; import org.obinject.queries.Schema; import org.obinject.storage.BTree; import org.obinject.storage.BTreeEntity; import org.obinject.storage.EntityStructure; import org.obinject.storage.KeyStructure; import org.obinject.storage.Structure; import org.obinject.storage.RTree; public class $MultiDimension extends MultiDimension implements Entity<$MultiDimension> { protected Uuid uuid; private static Uuid classId; public static Uuid getClassId(){ if ($MultiDimension.classId == null) {$MultiDimension.classId = Uuid.fromString("61FB83D7-77DB-FFEB-6BD9-6D9F88D91725"); }return $MultiDimension.classId; } public static final BTreeEntity<$MultiDimension> entityStructure = new BTreeEntity<$MultiDimension>(new File("build/classes/org/obinject/meta/rectangle/rectangle.dbo", 4096)){}; public static final BTree<UniqueOneMultiDimension> uniqueOneMultiDimensionStructure = new BTree<UniqueOneMultiDimension>(new File("build/classes/org/obinject/meta/rectangle/rectangle.dbo", 4096)){}; public static final RTree<RectangleOneMultiDimension> rectangleOneMultiDimensionStructure = new RTree<RectangleOneMultiDimension>(new File("build/classes/org/obinject/meta/rectangle/rectangle.dbo", 4096)){}; public static final Attribute<java.lang.String> nome = new Attribute<java.lang.String> (){ @Override public java.lang.String valueOfAttribute(Entity entity) { return ((MultiDimension)entity).getNome(); } }; public static final Attribute<Double> value1 = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((MultiDimension)entity).getValue1(); } }; public static final Attribute<Double> value2 = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((MultiDimension)entity).getValue2(); } }; public static final Attribute<double[]> value3 = new Attribute<double[]> (){ @Override public double[] valueOfAttribute(Entity entity) { return ((MultiDimension)entity).getValue3(); } }; public static final Attribute<Double> value4 = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((MultiDimension)entity).getValue4(); } }; public static final Attribute<Double> value5 = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((MultiDimension)entity).getValue5(); } }; public static final Attribute<Double> valueExtension1 = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((MultiDimension)entity).getValueExtension1(); } }; public static final Attribute<Double> valueExtension2 = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((MultiDimension)entity).getValueExtension2(); } }; public static final Attribute<double[]> valueExtension3 = new Attribute<double[]> (){ @Override public double[] valueOfAttribute(Entity entity) { return ((MultiDimension)entity).getValueExtension3(); } }; public static final Attribute<Double> valueExtension4 = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((MultiDimension)entity).getValueExtension4(); } }; public static final Attribute<Double> valueExtension5 = new Attribute<Double> (){ @Override public Double valueOfAttribute(Entity entity) { return ((MultiDimension)entity).getValueExtension5(); } }; public $MultiDimension(){ this.uuid = Uuid.generator(); } public $MultiDimension(MultiDimension obj){ this.setNome(obj.getNome()); this.setValue1(obj.getValue1()); this.setValue2(obj.getValue2()); this.setValue3(obj.getValue3()); this.setValue4(obj.getValue4()); this.setValue5(obj.getValue5()); this.setValueExtension1(obj.getValueExtension1()); this.setValueExtension2(obj.getValueExtension2()); this.setValueExtension3(obj.getValueExtension3()); this.setValueExtension4(obj.getValueExtension4()); this.setValueExtension5(obj.getValueExtension5()); this.uuid = Uuid.generator(); } public $MultiDimension(MultiDimension obj, Uuid uuid){ this.setNome(obj.getNome()); this.setValue1(obj.getValue1()); this.setValue2(obj.getValue2()); this.setValue3(obj.getValue3()); this.setValue4(obj.getValue4()); this.setValue5(obj.getValue5()); this.setValueExtension1(obj.getValueExtension1()); this.setValueExtension2(obj.getValueExtension2()); this.setValueExtension3(obj.getValueExtension3()); this.setValueExtension4(obj.getValueExtension4()); this.setValueExtension5(obj.getValueExtension5()); this.uuid = uuid; } public $MultiDimension($MultiDimension obj){ this.setNome(obj.getNome()); this.setValue1(obj.getValue1()); this.setValue2(obj.getValue2()); this.setValue3(obj.getValue3()); this.setValue4(obj.getValue4()); this.setValue5(obj.getValue5()); this.setValueExtension1(obj.getValueExtension1()); this.setValueExtension2(obj.getValueExtension2()); this.setValueExtension3(obj.getValueExtension3()); this.setValueExtension4(obj.getValueExtension4()); this.setValueExtension5(obj.getValueExtension5()); this.uuid = obj.getUuid();; } public $MultiDimension(Uuid uuid){ this.uuid = uuid; } @Override public boolean isEqual($MultiDimension obj) {  return (((this.getNome() == null) && (obj.getNome() == null)) || ((this.getNome() != null) && (obj.getNome() != null) && (this.getNome().equals( obj.getNome())))) && (this.getValue1() == obj.getValue1()) && (this.getValue2() == obj.getValue2()) && (this.getValue4() == obj.getValue4()) && (this.getValue5() == obj.getValue5()) && (this.getValueExtension1() == obj.getValueExtension1()) && (this.getValueExtension2() == obj.getValueExtension2()) && (this.getValueExtension4() == obj.getValueExtension4()) && (this.getValueExtension5() == obj.getValueExtension5()); } @Override public Uuid getUuid() { return this.uuid; } @Override public EntityStructure<$MultiDimension> getEntityStructure() { return entityStructure; } @Override public boolean inject(){ Uuid uuidInject = $MultiDimension.find(this); if(uuidInject == null){ $MultiDimension.entityStructure.add(this); UniqueOneMultiDimension.uniqueOneMultiDimensionStructure.add(new UniqueOneMultiDimension(this, this.getUuid())); RectangleOneMultiDimension.rectangleOneMultiDimensionStructure.add(new RectangleOneMultiDimension(this, this.getUuid())); return true; }else{ this.uuid = uuidInject; return false; } } @Override public boolean reject(){ Uuid uuidReject = $MultiDimension.find(this); if(uuidReject != null){ UniqueOneMultiDimension.uniqueOneMultiDimensionStructure.remove(new UniqueOneMultiDimension(this, this.getUuid())); RectangleOneMultiDimension.rectangleOneMultiDimensionStructure.remove(new RectangleOneMultiDimension(this, this.getUuid())); $MultiDimension.entityStructure.remove(this); return true; }else{ return false; } } @Override public boolean modify(){ Uuid uuidOld = $MultiDimension.find(this); $MultiDimension entityOld = $MultiDimension.entityStructure.find(uuidOld); if(entityOld != null){ UniqueOneMultiDimension uniqueOneMultiDimensionOld = new UniqueOneMultiDimension(entityOld, entityOld.getUuid()); UniqueOneMultiDimension uniqueOneMultiDimensionNew = new UniqueOneMultiDimension(this, entityOld.getUuid()); if(uniqueOneMultiDimensionOld.hasSameKey(uniqueOneMultiDimensionNew)){ $MultiDimension.uniqueOneMultiDimensionStructure.remove(uniqueOneMultiDimensionOld); $MultiDimension.uniqueOneMultiDimensionStructure.add(uniqueOneMultiDimensionNew); } RectangleOneMultiDimension rectangleOneMultiDimensionOld = new RectangleOneMultiDimension(entityOld, entityOld.getUuid()); RectangleOneMultiDimension rectangleOneMultiDimensionNew = new RectangleOneMultiDimension(this, entityOld.getUuid()); if(rectangleOneMultiDimensionOld.hasSameKey(rectangleOneMultiDimensionNew)){ $MultiDimension.rectangleOneMultiDimensionStructure.remove(rectangleOneMultiDimensionOld); $MultiDimension.rectangleOneMultiDimensionStructure.add(rectangleOneMultiDimensionNew); } this.uuid = uuidOld; $MultiDimension.entityStructure.remove(entityOld); $MultiDimension.entityStructure.add(this); return true; }else{ return false; } } public static Uuid find($MultiDimension entity) { UniqueOneMultiDimension unique = new UniqueOneMultiDimension (entity, entity.getUuid()); return $MultiDimension.uniqueOneMultiDimensionStructure.find(unique); } @Override public boolean pullEntity(byte[] array, int position) { PullPage pull = new PullPage(array, position); Uuid storedClass = pull.pullUuid(); if ($MultiDimension.classId.equals(storedClass) == true){ uuid = pull.pullUuid(); this.setNome(pull.pullString()); this.setValue1(pull.pullDouble()); this.setValue2(pull.pullDouble()); this.setValue3((double[]) pull.pullMatrix()); this.setValue4(pull.pullDouble()); this.setValue5(pull.pullDouble()); this.setValueExtension1(pull.pullDouble()); this.setValueExtension2(pull.pullDouble()); this.setValueExtension3((double[]) pull.pullMatrix()); this.setValueExtension4(pull.pullDouble()); this.setValueExtension5(pull.pullDouble()); return true; } return false; } @Override public void pushEntity(byte[] array, int position){ PushPage push = new PushPage(array, position); push.pushUuid($MultiDimension.classId); push.pushUuid(uuid); push.pushString(this.getNome()); push.pushDouble(this.getValue1()); push.pushDouble(this.getValue2()); push.pushMatrix(getValue3()); push.pushDouble(this.getValue4()); push.pushDouble(this.getValue5()); push.pushDouble(this.getValueExtension1()); push.pushDouble(this.getValueExtension2()); push.pushMatrix(getValueExtension3()); push.pushDouble(this.getValueExtension4()); push.pushDouble(this.getValueExtension5()); } @Override public int sizeOfEntity() { return Page.sizeOfUuid + Page.sizeOfUuid  + Page.sizeOfString(this.getNome()) + Page.sizeOfDouble + Page.sizeOfDouble + Page.sizeOfMatrix(this.getValue3()) + Page.sizeOfDouble + Page.sizeOfDouble + Page.sizeOfDouble + Page.sizeOfDouble + Page.sizeOfMatrix(this.getValueExtension3()) + Page.sizeOfDouble + Page.sizeOfDouble; } static{ nome.getSchemas().add( new Schema<$MultiDimension, UniqueOneMultiDimension, java.lang.String>() { @Override public $MultiDimension newEntity(java.lang.String value) { $MultiDimension obj = new $MultiDimension(); obj.setNome(value); return obj; } @Override public UniqueOneMultiDimension newKey(java.lang.String value) { UniqueOneMultiDimension obj = new UniqueOneMultiDimension(); obj.setNome(value); return obj; } @Override public EntityStructure<$MultiDimension> getEntityStructure() { return $MultiDimension.entityStructure; } @Override public KeyStructure<UniqueOneMultiDimension> getKeyStructure() { return UniqueOneMultiDimension.uniqueOneMultiDimensionStructure; } } ); value1.getSchemas().add( new Schema<$MultiDimension, RectangleOneMultiDimension, Double>() { @Override public $MultiDimension newEntity(Double value) { $MultiDimension obj = new $MultiDimension(); obj.setValue1(value); return obj; } @Override public RectangleOneMultiDimension newKey(Double value) { RectangleOneMultiDimension obj = new RectangleOneMultiDimension(); obj.setValue1(value); return obj; } @Override public EntityStructure<$MultiDimension> getEntityStructure() { return $MultiDimension.entityStructure; } @Override public KeyStructure<RectangleOneMultiDimension> getKeyStructure() { return RectangleOneMultiDimension.rectangleOneMultiDimensionStructure; } } ); value2.getSchemas().add( new Schema<$MultiDimension, RectangleOneMultiDimension, Double>() { @Override public $MultiDimension newEntity(Double value) { $MultiDimension obj = new $MultiDimension(); obj.setValue2(value); return obj; } @Override public RectangleOneMultiDimension newKey(Double value) { RectangleOneMultiDimension obj = new RectangleOneMultiDimension(); obj.setValue2(value); return obj; } @Override public EntityStructure<$MultiDimension> getEntityStructure() { return $MultiDimension.entityStructure; } @Override public KeyStructure<RectangleOneMultiDimension> getKeyStructure() { return RectangleOneMultiDimension.rectangleOneMultiDimensionStructure; } } ); value3.getSchemas().add( new Schema<$MultiDimension, RectangleOneMultiDimension, double[]>() { @Override public $MultiDimension newEntity(double[] value) { $MultiDimension obj = new $MultiDimension(); obj.setValue3(value); return obj; } @Override public RectangleOneMultiDimension newKey(double[] value) { RectangleOneMultiDimension obj = new RectangleOneMultiDimension(); obj.setValue3(value); return obj; } @Override public EntityStructure<$MultiDimension> getEntityStructure() { return $MultiDimension.entityStructure; } @Override public KeyStructure<RectangleOneMultiDimension> getKeyStructure() { return RectangleOneMultiDimension.rectangleOneMultiDimensionStructure; } } ); value4.getSchemas().add( new Schema<$MultiDimension, RectangleOneMultiDimension, Double>() { @Override public $MultiDimension newEntity(Double value) { $MultiDimension obj = new $MultiDimension(); obj.setValue4(value); return obj; } @Override public RectangleOneMultiDimension newKey(Double value) { RectangleOneMultiDimension obj = new RectangleOneMultiDimension(); obj.setValue4(value); return obj; } @Override public EntityStructure<$MultiDimension> getEntityStructure() { return $MultiDimension.entityStructure; } @Override public KeyStructure<RectangleOneMultiDimension> getKeyStructure() { return RectangleOneMultiDimension.rectangleOneMultiDimensionStructure; } } ); value5.getSchemas().add( new Schema<$MultiDimension, RectangleOneMultiDimension, Double>() { @Override public $MultiDimension newEntity(Double value) { $MultiDimension obj = new $MultiDimension(); obj.setValue5(value); return obj; } @Override public RectangleOneMultiDimension newKey(Double value) { RectangleOneMultiDimension obj = new RectangleOneMultiDimension(); obj.setValue5(value); return obj; } @Override public EntityStructure<$MultiDimension> getEntityStructure() { return $MultiDimension.entityStructure; } @Override public KeyStructure<RectangleOneMultiDimension> getKeyStructure() { return RectangleOneMultiDimension.rectangleOneMultiDimensionStructure; } } ); valueExtension1.getSchemas().add( new Schema<$MultiDimension, RectangleOneMultiDimension, Double>() { @Override public $MultiDimension newEntity(Double value) { $MultiDimension obj = new $MultiDimension(); obj.setValueExtension1(value); return obj; } @Override public RectangleOneMultiDimension newKey(Double value) { RectangleOneMultiDimension obj = new RectangleOneMultiDimension(); obj.setValueExtension1(value); return obj; } @Override public EntityStructure<$MultiDimension> getEntityStructure() { return $MultiDimension.entityStructure; } @Override public KeyStructure<RectangleOneMultiDimension> getKeyStructure() { return RectangleOneMultiDimension.rectangleOneMultiDimensionStructure; } } ); valueExtension2.getSchemas().add( new Schema<$MultiDimension, RectangleOneMultiDimension, Double>() { @Override public $MultiDimension newEntity(Double value) { $MultiDimension obj = new $MultiDimension(); obj.setValueExtension2(value); return obj; } @Override public RectangleOneMultiDimension newKey(Double value) { RectangleOneMultiDimension obj = new RectangleOneMultiDimension(); obj.setValueExtension2(value); return obj; } @Override public EntityStructure<$MultiDimension> getEntityStructure() { return $MultiDimension.entityStructure; } @Override public KeyStructure<RectangleOneMultiDimension> getKeyStructure() { return RectangleOneMultiDimension.rectangleOneMultiDimensionStructure; } } ); valueExtension3.getSchemas().add( new Schema<$MultiDimension, RectangleOneMultiDimension, double[]>() { @Override public $MultiDimension newEntity(double[] value) { $MultiDimension obj = new $MultiDimension(); obj.setValueExtension3(value); return obj; } @Override public RectangleOneMultiDimension newKey(double[] value) { RectangleOneMultiDimension obj = new RectangleOneMultiDimension(); obj.setValueExtension3(value); return obj; } @Override public EntityStructure<$MultiDimension> getEntityStructure() { return $MultiDimension.entityStructure; } @Override public KeyStructure<RectangleOneMultiDimension> getKeyStructure() { return RectangleOneMultiDimension.rectangleOneMultiDimensionStructure; } } ); valueExtension4.getSchemas().add( new Schema<$MultiDimension, RectangleOneMultiDimension, Double>() { @Override public $MultiDimension newEntity(Double value) { $MultiDimension obj = new $MultiDimension(); obj.setValueExtension4(value); return obj; } @Override public RectangleOneMultiDimension newKey(Double value) { RectangleOneMultiDimension obj = new RectangleOneMultiDimension(); obj.setValueExtension4(value); return obj; } @Override public EntityStructure<$MultiDimension> getEntityStructure() { return $MultiDimension.entityStructure; } @Override public KeyStructure<RectangleOneMultiDimension> getKeyStructure() { return RectangleOneMultiDimension.rectangleOneMultiDimensionStructure; } } ); valueExtension5.getSchemas().add( new Schema<$MultiDimension, RectangleOneMultiDimension, Double>() { @Override public $MultiDimension newEntity(Double value) { $MultiDimension obj = new $MultiDimension(); obj.setValueExtension5(value); return obj; } @Override public RectangleOneMultiDimension newKey(Double value) { RectangleOneMultiDimension obj = new RectangleOneMultiDimension(); obj.setValueExtension5(value); return obj; } @Override public EntityStructure<$MultiDimension> getEntityStructure() { return $MultiDimension.entityStructure; } @Override public KeyStructure<RectangleOneMultiDimension> getKeyStructure() { return RectangleOneMultiDimension.rectangleOneMultiDimensionStructure; } } ); } } 